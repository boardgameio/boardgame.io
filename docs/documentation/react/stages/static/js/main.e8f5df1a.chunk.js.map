{"version":3,"sources":["../../../src/client/debug/gameinfo.js","../../../src/client/debug/keyboard-shortcut.js","../../../src/client/debug/controls.js","../../../src/client/debug/playerinfo.js","../../../src/core/logger.js","../../../src/client/debug/debug-move.js","../../../src/core/action-types.js","../../../src/client/log/log.js","../../../src/core/action-creators.js","../../../src/client/debug/debug.js","../../../src/client/debug/assign-shortcuts.js","../../../src/plugins/main.js","../../../src/plugins/plugin-immer.js","../../../src/core/turn-order.js","../../../src/core/random.alea.js","../../../src/core/random.js","../../../src/core/events.js","../../../src/core/context-enhancer.js","../../../src/core/flow.js","../../../src/core/game.js","../../../src/client/transport/socketio.js","../../../src/server/db/inmemory.js","../../../src/core/initialize.js","../../../src/core/reducer.js","../../../src/master/master.js","../../../src/client/transport/local.js","../../../src/client/client.js","../../../src/client/react.js","../../../src/lobby/connection.js","../../../src/lobby/login-form.js","../../../src/lobby/room-instance.js","../../../src/lobby/create-room-form.js","../../../src/lobby/react.js","turnorder/example-all.js","turnorder/example-all-once.js","turnorder/example-others.js","turnorder/example-others-once.js","turnorder/simulator.js","app.js","index.js"],"names":["gameinfo_Item","props","node_modules_react_default","a","createElement","className","name","JSON","stringify","value","propTypes","prop_types_default","string","isRequired","any","gameinfo_GameInfo","gameID","playerID","isActive","isMultiplayer","isConnected","bool","keyboard_shortcut_KeyboardShortcut","_React$Component","KeyboardShortcut","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","defineProperty","assertThisInitialized","active","setState","onPress","inherits","createClass","key","_this2","mousetrap_default","bind","e","preventDefault","activate","unbind","child","children","cloneElement","state","deactivate","onClick","Component","func","controls_Controls","ai","step","simulate","dockTop","help","display","id","style","reset","save","restore","toggleHelp","playerinfo_PlayerInfo","PlayerInfo","arg","players","_loop","i","ctx","currentPlayer","push","numPlayers","errorfn","logger_error","error","debug_move_DebugMove","DebugMove","argArray","Function","fn","error2","focus","enterArg","shortcut","debug_move_DebugMoveArgField","onSubmit","_React$Component2","DebugMoveArgField","_getPrototypeOf3","_len2","_key2","span","innerText","blur","_this3","ref","r","onBlur","onKeyDown","contentEditable","MAKE_MOVE","GAME_EVENT","REDO","RESET","SYNC","UNDO","UPDATE","log_CustomPayload","custompayload","undefined","payload","log_LogEvent","action","classNames","pinned","customPayload","payloadComponent","onLogClick","logIndex","onMouseEnter","onMouseLeave","type","join","number","object","oneOfType","element","log_TurnMarker","gridRow","numEvents","turn","log_PhaseMarker","phase","log_GameLog","GameLog","initialState","log","_this$props$log$i","automatic","reducer","G","o","rewind","metadata","filter","onHover","turns","phases","eventsInCurrentPhase","eventsInCurrentTurn","renderedLogEntries","_renderedLogEntries$i","array","action_creators_makeMove","credentials","action_creators_gameEvent","action_creators_automaticGameEvent","action_creators_sync","clientOnly","action_creators_update","deltalog","action_creators_reset","action_creators_undo","action_creators_redo","debug_Debug","Debug","json","esm","gamestate","window","localStorage","setItem","gamestateJSON","getItem","store","dispatch","showLog","oldstate","_ref","AIMetadata","overrideGameState","iterations","sleepTimeout","_ref2","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","abrupt","Promise","resolve","setTimeout","stop","shortcuts","moveNames","eventNames","blacklist","events","_name","taken","t","canUseFirstChar","_name2","_name3","_shortcut","String","fromCharCode","AssignShortcuts","moves","showDebugUI","showGameInfo","dockControls","old","_fn","visualizeAI","onClickMain","onClickLog","saveState","restoreState","updatePlayerID","startsWith","SanitizeCtx","onLogHover","_initial","shape","updateGameID","updateCredentials","DEFAULT_PLUGINS","fnWrap","move","immer_module","main_FnWrap","plugins","g","toConsumableArray","plugin","reduce","acc","preMove","forEach","main_GPreMove","main_CtxPreMove","postMove","main_GPostMove","main_G","setup","game","onPhaseBegin","main_ctx","SetActivePlayersEvent","objectSpread","SetActivePlayers","_prevActivePlayers","_nextActivePlayers","revert","activePlayers","_activePlayersMoveLimit","_activePlayersNumMoves","others","playOrder","all","_i","keys","moveLimit","_id","_id2","getCurrentPlayer","playOrderPos","TurnOrder","DEFAULT","first","ONCE","CUSTOM","_playOrder","CUSTOM_FROM","playOrderField","SKIP","allPassed","passOrder","includes","Stage","NULL","ActivePlayers","ALL","ALL_ONCE","OTHERS","OTHERS_ONCE","Alea","seed","me","mash","n","data","toString","h","charCodeAt","Mash","s0","c","s1","s2","copy","f","alea","opts","xg","prng","quick","random_Random","Random","_random","random","_api","R","prngstate","SpotValue","D4","D6","D8","D10","D12","D20","predefined","spotvalue","diceCount","Math","floor","map","Die","Number","Shuffle","deck","clone","slice","srcIndex","dstIndex","shuffled","randIndex","detach","objectWithoutProperties","Date","events_Events","Events","flow","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","item","processGameEvent","context_enhancer_GameLoggerCtxAPI","GameLoggerCtxAPI","_payload","setPayload","context_enhancer_ContextEnhancer","ContextEnhancer","player","ctxWithAPI","attach","updateEvents","newState","update","_update","detachAllFromContext","ctxWithoutAPI","FlowInternal","eventHandlers","enabledEvents","init","_processMove","processMove","moveMap","getMove","enabledEventNames","hasOwnProperty","context","canPlayerCallEvent","_G","isCurrentPlayer","canPlayerMakeMove","canPlayerMakeAnyMove","Flow","endIf","setActivePlayers","endStage","setStage","endPhase","setPhase","endTurn","endGame","phaseMap","Set","startingPhase","add","conf","start","_arr","stage","onBegin","onEnd","order","onMove","stages","_moves","_arr2","_i2","_move","GetPhase","OnMove","s","ProcessEvents","phasesEnded","turnsEnded","_events$i","rest","EndPhase","clear","_phase","has","EndGame","shouldEndGame","ShouldEndGame","shouldEndPhase","ShouldEndPhase","shouldEndTurn","ShouldEndTurn","EndTurn","StartGame","_ref3","StartPhase","_ref4","StartTurn","_ref5","d","InitTurnOrderState","numMoves","_undo","_redo","UpdatePhase","_ref6","UpdateTurn","_ref7","_state2","_UpdateTurnOrderState","endTurnArg","indexOf","UpdateTurnOrderState","UpdateStage","_ref8","_ctx","_ref9","_ref10","_ref11","currentPlayerMoves","_ref12","gameover","_ref13","force","logEntry","_stateID","_ref14","EndStage","_ref15","_ctx2","obj","lastIndex","_prevActivePlayers$la","UpdateActivePlayersOnceEmpty","newPhase","values","undo","moveType","plainCtx","_moves2","Game","playerView","moveFn","socketio_SocketIO","SocketIO","socket","socketOpts","gameName","server","callback","gameMetadataCallback","emit","search","substr","lib_default","on","currentState","getState","gameMetadata","inmemory_InMemory","InMemory","games","Map","set","get","delete","InitializeGame","setupData","apiCtx","attachToContext","initialG","initial","updateAndDetach","CanUndoMove","undoable","INVALID_MOVE","CreateGameReducer","multiplayer","optimistic","_apiCtx","redact","_newState","_state","last","lastMove","_undo2","_redo2","GameMetadataKey","redactLog","logEvent","filteredEvent","isActionFromAuthenticPlayer","some","master_Master","Master","storageAPI","transportAPI","auth","_onUpdate","stateID","isActionAuthentic","_gameMetadata","stateWithLog","executeSynchronously","redux","sendAll","filteredState","_x","_x2","_x3","_x4","_onSync","_callee2","filteredGameMetadata","_context2","send","_x5","_x6","_x7","LocalMaster","clientCallbacks","master","_arg","connect","local_Local","Local","onUpdate","onSync","_metadata","localMaster_","createDispatchers","storeActionType","innerActionNames","dispatchers","assumedPlayerID","action_creators_namespaceObject","createEventDispatchers","createMoveDispatchers","client_ClientImpl","_ClientImpl","enhancer","subscribeCallback","bot","enumerate","play","redo","LogMiddleware","result","_deltalog","l","TransportMiddleware","baseState","transport","onAction","SubscriptionMiddleware","subscribe","subscribeGameMetadata","local","config","ret","react_Client","_class","_temp","loading","board","debug","WrappedBoard","gameStateOverride","client","forceUpdate","prevProps","_board","_debug","_this$props","debugProp","visualize","connection_LobbyConnectionImpl","_LobbyConnectionImpl","gameComponents","playerName","playerCredentials","rooms","_refresh","resp","gameResp","gameJson","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","fetch","_baseUrl","status","Error","_getGameComponents","t0","finish","t1","t2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","inst","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","comp","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_join","_findPlayer","_getGameInstance","method","body","headers","Content-Type","parseInt","_leave","_callee3","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_iterator6","_step6","_context3","_disconnect","_callee4","_context4","leave","_create","_callee5","_context5","minPlayers","maxPlayers","login_form_LobbyLoginForm","LobbyLoginForm","nameErrorMsg","onEnter","event","onClickEnter","target","trim","onChange","onChangePlayerName","onKeyPress","login_form","room_instance_LobbyRoomInstance","LobbyRoomInstance","playerSeat","find","freeSeat","onClickLeave","onClickJoin","onClickPlay","room","_createSeat","_createInstanceButtons","room_instance","create_room_form_LobbyCreateRoomForm","LobbyCreateRoomForm","selectedGame","idx","createGame","game_details","console","assert","evt","onChangeSelectedGame","_createGameNameOption","onChangeNumPlayers","_createNumPlayersRange","_createNumPlayersOption","onClickCreate","create_room_form","LobbyPhases","ENTER","PLAY","LIST","react_Lobby","Lobby","_props","runningGame","errorMsg","credentialStore","connection","lobbyServer","prevState","assign","refresh","disconnect","create","message","_updateCredentials","gameOpts","gameCode","gameServer","app","clientFactory","_joinRoom","_leaveRoom","_startGame","_createConnection","_updateConnection","cookie","cookie_default","load","creds","path","renderer","_this$state","handleEnterLobby","_enterLobby","handleExitLobby","_exitLobby","handleCreateRoom","_createRoom","handleJoinRoom","handleLeaveRoom","handleExitRoom","_exitRoom","handleRefreshRooms","handleStartGame","padding","_getPhaseVisibility","renderRooms","example_all","description","react_default","example_all_once","example_others","example_others_once","discard","Board","current","entries","examples","others-once","OthersOnce","All","all-once","AllOnce","Others","App","shouldUpdate","Client","Description","React","render","app_App","document","getElementById"],"mappings":"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","file":"static/js/main.e8f5df1a.chunk.js","sourcesContent":["/*\n * Copyright 2018 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar Item = function Item(props) {\n  return React.createElement(\"div\", {\n    className: \"gameinfo-item\"\n  }, React.createElement(\"strong\", null, props.name, \" \"), React.createElement(\"div\", null, JSON.stringify(props.value)));\n};\n\nItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.any\n};\nexport var GameInfo = function GameInfo(props) {\n  return React.createElement(\"section\", {\n    className: \"gameinfo\"\n  }, React.createElement(Item, {\n    name: \"gameID\",\n    value: props.gameID\n  }), React.createElement(Item, {\n    name: \"playerID\",\n    value: props.playerID\n  }), React.createElement(Item, {\n    name: \"isActive\",\n    value: props.isActive\n  }), props.isMultiplayer && React.createElement(\"span\", null, React.createElement(Item, {\n    name: \"isConnected\",\n    value: props.isConnected\n  }), React.createElement(Item, {\n    name: \"isMultiplayer\",\n    value: props.isMultiplayer\n  })));\n};\nGameInfo.propTypes = {\n  gameID: PropTypes.string,\n  playerID: PropTypes.string,\n  isActive: PropTypes.bool,\n  isConnected: PropTypes.bool,\n  isMultiplayer: PropTypes.bool\n};","import _classCallCheck from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\n/*\n * Copyright 2017 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Mousetrap from 'mousetrap';\nimport './debug.css';\n/**\n * KeyboardShortcut\n *\n * Registers a keyboard shortcut to activate the\n * associated child component that is passed in.\n *\n * When the key is pressed, 'active' is set to true\n * in the prop passed to the child.\n */\n\nexport var KeyboardShortcut =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(KeyboardShortcut, _React$Component);\n\n  function KeyboardShortcut() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, KeyboardShortcut);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(KeyboardShortcut)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      active: false\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"deactivate\", function () {\n      _this.setState({\n        active: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"activate\", function () {\n      _this.setState({\n        active: true\n      });\n\n      if (_this.props.onPress) {\n        _this.props.onPress();\n\n        _this.setState({\n          active: false\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(KeyboardShortcut, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Mousetrap.bind(this.props.value, function (e) {\n        e.preventDefault();\n\n        _this2.activate();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Mousetrap.unbind(this.props.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var child = this.props.children;\n\n      if (typeof this.props.children === typeof this) {\n        child = React.cloneElement(this.props.children, {\n          active: this.state.active,\n          deactivate: this.deactivate,\n          activate: this.activate\n        });\n      }\n\n      var className = 'key';\n\n      if (this.state.active) {\n        className += ' active';\n      }\n\n      return React.createElement(\"div\", {\n        className: className\n      }, React.createElement(\"div\", {\n        className: \"key-box\",\n        onClick: this.activate\n      }, this.props.value), React.createElement(\"div\", {\n        className: \"key-child\"\n      }, child));\n    }\n  }]);\n\n  return KeyboardShortcut;\n}(React.Component);\n\n_defineProperty(KeyboardShortcut, \"propTypes\", {\n  value: PropTypes.string.isRequired,\n  children: PropTypes.any,\n  onPress: PropTypes.func\n});","/*\n * Copyright 2018 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { KeyboardShortcut } from './keyboard-shortcut';\n/**\n * Controls that are triggered by keyboard shortcuts.\n */\n\nexport var Controls = function Controls(props) {\n  var ai = null;\n\n  if (props.step) {\n    ai = [React.createElement(KeyboardShortcut, {\n      key: \"4\",\n      value: \"4\",\n      onPress: props.step\n    }, \"step\"), React.createElement(KeyboardShortcut, {\n      key: \"5\",\n      value: \"5\",\n      onPress: props.simulate\n    }, \"simulate\")];\n  }\n\n  var style = null;\n  var className = 'controls';\n\n  if (props.dockTop) {\n    className += ' docktop';\n  }\n\n  if (props.help) {\n    className += ' help';\n  }\n\n  var display = props.help && !props.dockTop ? 'block' : 'none';\n  return React.createElement(\"section\", {\n    id: \"debug-controls\",\n    style: style,\n    className: className\n  }, React.createElement(KeyboardShortcut, {\n    value: \"1\",\n    onPress: props.reset\n  }, \"reset\"), React.createElement(KeyboardShortcut, {\n    value: \"2\",\n    onPress: props.save\n  }, \"save\"), React.createElement(KeyboardShortcut, {\n    value: \"3\",\n    onPress: props.restore\n  }, \"restore\"), ai, props.dockTop || React.createElement(KeyboardShortcut, {\n    value: \"?\",\n    onPress: props.toggleHelp\n  }, \"show more\"), React.createElement(\"div\", {\n    className: \"key\",\n    style: {\n      display: display\n    }\n  }, React.createElement(\"div\", {\n    className: \"key-box\"\n  }, \"d\"), \" show/hide this pane\"), React.createElement(\"div\", {\n    className: \"key\",\n    style: {\n      display: display\n    }\n  }, React.createElement(\"div\", {\n    className: \"key-box\"\n  }, \"l\"), \" show/hide log\"), React.createElement(\"div\", {\n    className: \"key\",\n    style: {\n      display: display\n    }\n  }, React.createElement(\"div\", {\n    className: \"key-box\"\n  }, \"i\"), \" show/hide game info tab\"), React.createElement(\"div\", {\n    className: \"key\",\n    style: {\n      display: display\n    }\n  }, React.createElement(\"div\", {\n    className: \"key-box\"\n  }, \"t\"), \" dock controls\"));\n};\nControls.propTypes = {\n  help: PropTypes.bool,\n  toggleHelp: PropTypes.func,\n  step: PropTypes.func,\n  simulate: PropTypes.func,\n  reset: PropTypes.func,\n  save: PropTypes.func,\n  restore: PropTypes.func,\n  dockTop: PropTypes.bool\n};","import _classCallCheck from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\n/*\n * Copyright 2018 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n/**\n * Component that renders information about the\n * players in the game (whose turn it is etc.).\n */\n\nexport var PlayerInfo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PlayerInfo, _React$Component);\n\n  function PlayerInfo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PlayerInfo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlayerInfo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onClick\", function (playerID) {\n      var arg = playerID == _this.props.playerID ? null : playerID;\n\n      _this.props.onClick(arg);\n    });\n\n    return _this;\n  }\n\n  _createClass(PlayerInfo, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var players = [];\n\n      var _loop = function _loop(i) {\n        var playerID = i + '';\n        var className = 'player';\n\n        if (playerID === _this2.props.ctx.currentPlayer) {\n          className += ' current';\n        }\n\n        if (playerID === _this2.props.playerID) {\n          className += ' active';\n        }\n\n        players.push(React.createElement(\"div\", {\n          className: className,\n          key: i,\n          onClick: function onClick() {\n            return _this2.onClick(playerID);\n          }\n        }, playerID));\n      };\n\n      for (var i = 0; i < this.props.ctx.numPlayers; i++) {\n        _loop(i);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"player-box\"\n      }, players);\n    }\n  }]);\n\n  return PlayerInfo;\n}(React.Component);\n\n_defineProperty(PlayerInfo, \"propTypes\", {\n  ctx: PropTypes.any.isRequired,\n  playerID: PropTypes.any,\n  onClick: PropTypes.func\n});","/*\n * Copyright 2018 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nvar DEV = process.env.NODE_ENV === 'development' || process.env.NODE_ENV == 'test';\nvar logfn = DEV ? console.log : function () {};\nvar errorfn = DEV ? console.error : function () {};\nexport function info(msg) {\n  logfn(\"INFO: \".concat(msg));\n}\nexport function error(error) {\n  errorfn('ERROR:', error);\n}","import _classCallCheck from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\n/*\n * Copyright 2017 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as logger from '../../core/logger';\nimport { KeyboardShortcut } from './keyboard-shortcut';\nimport './debug.css';\n/**\n * DebugMove\n *\n * Component that allows the user to dispatch a move from\n * the debug pane. The user is presented with the textarea\n * to enter any additional arguments.\n */\n\nexport var DebugMove =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DebugMove, _React$Component);\n\n  function DebugMove() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DebugMove);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DebugMove)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      error: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onSubmit\", function (value) {\n      var error = '';\n\n      try {\n        var argArray = new Function(\"return [\".concat(value, \"]\"))();\n\n        _this.props.fn.apply(_assertThisInitialized(_assertThisInitialized(_this)), argArray);\n      } catch (error2) {\n        error = '' + error2;\n        logger.error(error2);\n      }\n\n      _this.setState({\n        error: error,\n        focus: false,\n        enterArg: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(DebugMove, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", null, React.createElement(KeyboardShortcut, {\n        value: this.props.shortcut\n      }, React.createElement(DebugMoveArgField, {\n        name: this.props.name,\n        onSubmit: this.onSubmit\n      })), this.state.error ? React.createElement(\"span\", {\n        className: \"move-error\"\n      }, this.state.error) : null);\n    }\n  }]);\n\n  return DebugMove;\n}(React.Component);\n\n_defineProperty(DebugMove, \"propTypes\", {\n  name: PropTypes.string.isRequired,\n  shortcut: PropTypes.string.isRequired,\n  fn: PropTypes.func.isRequired\n});\n\nexport var DebugMoveArgField =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(DebugMoveArgField, _React$Component2);\n\n  function DebugMoveArgField() {\n    var _getPrototypeOf3;\n\n    var _this2;\n\n    _classCallCheck(this, DebugMoveArgField);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(DebugMoveArgField)).call.apply(_getPrototypeOf3, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this2)), \"onKeyDown\", function (e) {\n      if (e.key == 'Enter') {\n        e.preventDefault();\n        var value = _this2.span.innerText;\n\n        _this2.props.onSubmit(value);\n\n        _this2.span.innerText = '';\n\n        _this2.props.deactivate();\n      }\n\n      if (e.key == 'Escape') {\n        e.preventDefault();\n\n        _this2.props.deactivate();\n      }\n    });\n\n    return _this2;\n  }\n\n  _createClass(DebugMoveArgField, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.active) {\n        this.span.focus();\n      } else {\n        this.span.blur();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var className = 'move';\n      if (this.props.active) className += ' active';\n      return React.createElement(\"div\", {\n        className: className,\n        onClick: this.props.activate\n      }, this.props.name, \"(\", React.createElement(\"span\", {\n        ref: function ref(r) {\n          _this3.span = r;\n        },\n        className: \"arg-field\",\n        onBlur: this.props.deactivate,\n        onKeyDown: this.onKeyDown,\n        contentEditable: true\n      }), \")\");\n    }\n  }]);\n\n  return DebugMoveArgField;\n}(React.Component);\n\n_defineProperty(DebugMoveArgField, \"propTypes\", {\n  name: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  active: PropTypes.bool,\n  activate: PropTypes.func,\n  deactivate: PropTypes.func\n});","/*\n * Copyright 2017 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nexport var MAKE_MOVE = 'MAKE_MOVE';\nexport var GAME_EVENT = 'GAME_EVENT';\nexport var REDO = 'REDO';\nexport var RESET = 'RESET';\nexport var SYNC = 'SYNC';\nexport var UNDO = 'UNDO';\nexport var UPDATE = 'UPDATE';","import _classCallCheck from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\n/*\n * Copyright 2017 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { MAKE_MOVE } from '../../core/action-types';\nimport './log.css';\n/**\n * Default component to render custom payload.\n */\n\nvar CustomPayload = function CustomPayload(props) {\n  var custompayload = props.payload !== undefined ? JSON.stringify(props.payload, null, 4) : '';\n  return React.createElement(\"div\", null, custompayload);\n};\n\nCustomPayload.propTypes = {\n  payload: PropTypes.any\n};\n/**\n * LogEvent\n *\n * Logs a single action in the game.\n */\n\nvar LogEvent = function LogEvent(props) {\n  var action = props.action;\n  var args = action.payload.args || [];\n  var playerID = action.payload.playerID;\n  var classNames = \"log-event player\".concat(playerID);\n\n  if (props.pinned) {\n    classNames += ' pinned';\n  } // allow to pass in custom rendering component for custom payload\n\n\n  var customPayload = props.payloadComponent !== undefined ? React.createElement(props.payloadComponent, {\n    payload: props.payload\n  }) : React.createElement(CustomPayload, {\n    payload: props.payload\n  });\n  return React.createElement(\"div\", {\n    className: classNames,\n    onClick: function onClick() {\n      return props.onLogClick(props.logIndex);\n    },\n    onMouseEnter: function onMouseEnter() {\n      return props.onMouseEnter(props.logIndex);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return props.onMouseLeave();\n    }\n  }, React.createElement(\"div\", null, action.payload.type, \"(\", args.join(','), \")\"), customPayload);\n};\n\nLogEvent.propTypes = {\n  action: PropTypes.any.isRequired,\n  logIndex: PropTypes.number.isRequired,\n  onLogClick: PropTypes.func.isRequired,\n  onMouseEnter: PropTypes.func.isRequired,\n  onMouseLeave: PropTypes.func.isRequired,\n  pinned: PropTypes.bool,\n  payload: PropTypes.object,\n  payloadComponent: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n};\n/**\n * TurnMarker\n *\n * The markers on the left of the log events that indicate\n * which turn the event belongs to.\n */\n\nvar TurnMarker = function TurnMarker(props) {\n  return React.createElement(\"div\", {\n    className: \"turn-marker\",\n    style: {\n      gridRow: 'span ' + props.numEvents\n    }\n  }, props.turn);\n};\n\nTurnMarker.propTypes = {\n  turn: PropTypes.number.isRequired,\n  numEvents: PropTypes.number.isRequired\n};\n/**\n * PhaseMarker\n *\n * The markers on the right of the log events that indicate\n * which phase the event belongs to.\n */\n\nvar PhaseMarker = function PhaseMarker(props) {\n  return React.createElement(\"div\", {\n    className: \"phase-marker\",\n    style: {\n      gridRow: 'span ' + props.numEvents\n    }\n  }, props.phase);\n};\n\nPhaseMarker.propTypes = {\n  phase: PropTypes.string,\n  numEvents: PropTypes.number.isRequired\n};\n/**\n * GameLog\n *\n * Component to log the actions in the game.\n */\n\nexport var GameLog =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GameLog, _React$Component);\n\n  function GameLog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GameLog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GameLog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      pinned: null\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"rewind\", function (logIndex) {\n      var state = _this.props.initialState;\n\n      for (var i = 0; i < _this.props.log.length; i++) {\n        var _this$props$log$i = _this.props.log[i],\n            action = _this$props$log$i.action,\n            automatic = _this$props$log$i.automatic;\n\n        if (!automatic) {\n          state = _this.props.reducer(state, action);\n        }\n\n        if (action.type == MAKE_MOVE) {\n          if (logIndex == 0) {\n            break;\n          }\n\n          logIndex--;\n        }\n      }\n\n      return {\n        G: state.G,\n        ctx: state.ctx\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onLogClick\", function (logIndex) {\n      _this.setState(function (o) {\n        var state = _this.rewind(logIndex);\n\n        var renderedLogEntries = _this.props.log.filter(function (e) {\n          return e.action.type == MAKE_MOVE;\n        });\n\n        var metadata = renderedLogEntries[logIndex].action.payload.metadata;\n\n        if (o.pinned === logIndex) {\n          _this.props.onHover({\n            logIndex: logIndex,\n            state: state,\n            metadata: undefined\n          });\n\n          return {\n            pinned: null\n          };\n        }\n\n        _this.props.onHover({\n          logIndex: logIndex,\n          state: state,\n          metadata: metadata\n        });\n\n        return {\n          pinned: logIndex\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onMouseEnter\", function (logIndex) {\n      if (_this.state.pinned === null) {\n        var state = _this.rewind(logIndex);\n\n        _this.props.onHover({\n          logIndex: logIndex,\n          state: state\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onMouseLeave\", function () {\n      if (_this.state.pinned === null) {\n        _this.props.onHover({\n          state: null\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(GameLog, [{\n    key: \"render\",\n    value: function render() {\n      var log = [];\n      var turns = [];\n      var phases = [];\n      var eventsInCurrentPhase = 0;\n      var eventsInCurrentTurn = 0;\n      var renderedLogEntries = this.props.log.filter(function (e) {\n        return e.action.type == MAKE_MOVE;\n      });\n\n      for (var i = 0; i < renderedLogEntries.length; i++) {\n        var _renderedLogEntries$i = renderedLogEntries[i],\n            action = _renderedLogEntries$i.action,\n            payload = _renderedLogEntries$i.payload,\n            turn = _renderedLogEntries$i.turn,\n            phase = _renderedLogEntries$i.phase;\n        eventsInCurrentPhase++;\n        eventsInCurrentTurn++;\n        log.push(React.createElement(LogEvent, {\n          key: i,\n          pinned: i === this.state.pinned,\n          logIndex: i,\n          onLogClick: this.onLogClick,\n          onMouseEnter: this.onMouseEnter,\n          onMouseLeave: this.onMouseLeave,\n          action: action,\n          payload: payload,\n          payloadComponent: this.props.payloadComponent\n        }));\n\n        if (i == renderedLogEntries.length - 1 || renderedLogEntries[i + 1].turn != turn) {\n          turns.push(React.createElement(TurnMarker, {\n            key: turns.length,\n            turn: turn,\n            numEvents: eventsInCurrentTurn\n          }));\n          eventsInCurrentTurn = 0;\n        }\n\n        if (i == renderedLogEntries.length - 1 || renderedLogEntries[i + 1].phase != phase) {\n          phases.push(React.createElement(PhaseMarker, {\n            key: phases.length,\n            phase: phase,\n            numEvents: eventsInCurrentPhase\n          }));\n          eventsInCurrentPhase = 0;\n        }\n      }\n\n      var className = 'gamelog';\n\n      if (this.state.pinned !== null) {\n        className += ' pinned';\n      }\n\n      return React.createElement(\"div\", {\n        className: className\n      }, turns, log, phases);\n    }\n  }]);\n\n  return GameLog;\n}(React.Component);\n\n_defineProperty(GameLog, \"propTypes\", {\n  onHover: PropTypes.func,\n  reducer: PropTypes.func,\n  initialState: PropTypes.any.isRequired,\n  log: PropTypes.array.isRequired,\n  payloadComponent: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n});\n\n_defineProperty(GameLog, \"defaultProps\", {\n  onHover: function onHover() {}\n});","/*\n * Copyright 2017 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport * as Actions from './action-types';\n/**\n * Generate a move to be dispatched to the game move reducer.\n *\n * @param {string} type - The move type.\n * @param {Array}  args - Additional arguments.\n * @param {string}  playerID - The ID of the player making this action.\n * @param {string}  credentials - (optional) The credentials for the player making this action.\n */\n\nexport var makeMove = function makeMove(type, args, playerID, credentials) {\n  return {\n    type: Actions.MAKE_MOVE,\n    payload: {\n      type: type,\n      args: args,\n      playerID: playerID,\n      credentials: credentials\n    }\n  };\n};\n/**\n * Generate a game event to be dispatched to the flow reducer.\n *\n * @param {string} type - The event type.\n * @param {Array}  args - Additional arguments.\n * @param {string}  playerID - The ID of the player making this action.\n * @param {string}  credentials - (optional) The credentials for the player making this action.\n */\n\nexport var gameEvent = function gameEvent(type, args, playerID, credentials) {\n  return {\n    type: Actions.GAME_EVENT,\n    payload: {\n      type: type,\n      args: args,\n      playerID: playerID,\n      credentials: credentials\n    }\n  };\n};\n/**\n * Generate an automatic game event that is a side-effect of a move.\n * @param {string} type - The event type.\n * @param {Array}  args - Additional arguments.\n * @param {string}  playerID - The ID of the player making this action.\n * @param {string}  credentials - (optional) The credentials for the player making this action.\n */\n\nexport var automaticGameEvent = function automaticGameEvent(type, args, playerID, credentials) {\n  return {\n    type: Actions.GAME_EVENT,\n    payload: {\n      type: type,\n      args: args,\n      playerID: playerID,\n      credentials: credentials\n    },\n    automatic: true\n  };\n};\n/**\n * Used to reset the Redux store's state on a sync.\n * @param {object} state - The state to restore.\n * @param {Array} log - The log to restore.\n */\n\nexport var sync = function sync(state, log) {\n  return {\n    type: Actions.SYNC,\n    state: state,\n    log: log,\n    clientOnly: true\n  };\n};\n/**\n * Used to update the Redux store's state in response to\n * an action coming from another player.\n * @param {object} state - The state to restore.\n * @param {Array} deltalog - A log delta.\n */\n\nexport var update = function update(state, deltalog) {\n  return {\n    type: Actions.UPDATE,\n    state: state,\n    deltalog: deltalog,\n    clientOnly: true\n  };\n};\n/**\n * Used to reset the game state.\n * @param {object} state - The initial state.\n */\n\nexport var reset = function reset(state) {\n  return {\n    type: Actions.RESET,\n    state: state,\n    clientOnly: true\n  };\n};\n/**\n * Used to undo the last move.\n */\n\nexport var undo = function undo() {\n  return {\n    type: Actions.UNDO\n  };\n};\n/**\n * Used to redo the last undone move.\n */\n\nexport var redo = function redo() {\n  return {\n    type: Actions.REDO\n  };\n};","import _regeneratorRuntime from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\n/*\n * Copyright 2017 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Mousetrap from 'mousetrap';\nimport { AssignShortcuts } from './assign-shortcuts';\nimport { GameInfo } from './gameinfo';\nimport { Controls } from './controls';\nimport { PlayerInfo } from './playerinfo';\nimport { DebugMove } from './debug-move';\nimport { GameLog } from '../log/log';\nimport { sync } from '../../core/action-creators';\nimport { parse, stringify } from 'flatted';\nimport './debug.css';\n/**\n * Removes all the keys in ctx that begin with a _.\n */\n\nfunction SanitizeCtx(ctx) {\n  var r = {};\n\n  for (var key in ctx) {\n    if (!key.startsWith('_')) {\n      r[key] = ctx[key];\n    }\n  }\n\n  return r;\n}\n/**\n * Debug\n *\n * Debug pane that displays the game state objects,\n * allows you to dispatch moves,\n * and allows you to save / restore from localStorage.\n */\n\n\nexport var Debug =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Debug, _React$Component);\n\n  function Debug(props) {\n    var _this;\n\n    _classCallCheck(this, Debug);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Debug).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"saveState\", function () {\n      var json = stringify(_this.props.gamestate);\n      window.localStorage.setItem('gamestate', json);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"restoreState\", function () {\n      var gamestateJSON = window.localStorage.getItem('gamestate');\n\n      if (gamestateJSON !== null) {\n        var gamestate = parse(gamestateJSON);\n\n        _this.props.store.dispatch(sync(gamestate));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onClickMain\", function () {\n      _this.setState({\n        showLog: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onClickLog\", function () {\n      _this.setState({\n        showLog: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"toggleHelp\", function () {\n      _this.setState(function (oldstate) {\n        return {\n          help: !oldstate.help\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onLogHover\", function (_ref) {\n      var state = _ref.state,\n          metadata = _ref.metadata;\n\n      _this.setState({\n        AIMetadata: metadata\n      });\n\n      _this.props.overrideGameState(state);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"simulate\", function () {\n      var iterations = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10000;\n      var sleepTimeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n\n      var step =\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee() {\n          var i, action;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  i = 0;\n\n                case 1:\n                  if (!(i < iterations)) {\n                    _context.next = 12;\n                    break;\n                  }\n\n                  _context.next = 4;\n                  return _this.props.step();\n\n                case 4:\n                  action = _context.sent;\n\n                  if (action) {\n                    _context.next = 7;\n                    break;\n                  }\n\n                  return _context.abrupt(\"break\", 12);\n\n                case 7:\n                  _context.next = 9;\n                  return new Promise(function (resolve) {\n                    return setTimeout(resolve, sleepTimeout);\n                  });\n\n                case 9:\n                  i++;\n                  _context.next = 1;\n                  break;\n\n                case 12:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function step() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n\n      return step();\n    });\n\n    _this.shortcuts = AssignShortcuts(props.moves, props.events, 'dlit');\n    _this.state = {\n      showDebugUI: true,\n      showLog: false,\n      showGameInfo: props.showGameInfo,\n      dockControls: props.dockControls,\n      help: false,\n      AIMetadata: null\n    };\n    return _this;\n  }\n\n  _createClass(Debug, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Mousetrap.bind('d', function (e) {\n        e.preventDefault();\n\n        _this2.setState(function (old) {\n          return {\n            showDebugUI: !old.showDebugUI\n          };\n        });\n      });\n      Mousetrap.bind('l', function (e) {\n        e.preventDefault();\n\n        _this2.setState(function (old) {\n          return {\n            showLog: !old.showLog\n          };\n        });\n      });\n      Mousetrap.bind('i', function (e) {\n        e.preventDefault();\n\n        _this2.setState(function (old) {\n          return {\n            showGameInfo: !old.showGameInfo\n          };\n        });\n      });\n      Mousetrap.bind('t', function (e) {\n        e.preventDefault();\n\n        _this2.setState(function (old) {\n          return {\n            dockControls: !old.dockControls\n          };\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Mousetrap.unbind('d');\n      Mousetrap.unbind('l');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.showDebugUI) {\n        return null;\n      }\n\n      var moves = [];\n\n      for (var name in this.props.moves) {\n        var fn = this.props.moves[name];\n        var shortcut = this.shortcuts[name];\n        moves.push(React.createElement(DebugMove, {\n          key: name,\n          name: name,\n          fn: fn,\n          shortcut: shortcut\n        }));\n      }\n\n      var events = [];\n\n      for (var _name in this.props.events) {\n        var _fn = this.props.events[_name];\n        var _shortcut = this.shortcuts[_name];\n        events.push(React.createElement(DebugMove, {\n          key: _name,\n          name: _name,\n          fn: _fn,\n          shortcut: _shortcut\n        }));\n      }\n\n      var visualizeAI = this.state.AIMetadata && this.props.visualizeAI;\n      var className = 'debug-ui';\n\n      if (this.state.dockControls) {\n        className += ' docktop';\n      }\n\n      return React.createElement(\"div\", {\n        className: className\n      }, visualizeAI && React.createElement(\"div\", {\n        className: \"ai-visualization\"\n      }, this.props.visualizeAI(this.state.AIMetadata)), React.createElement(\"div\", {\n        className: \"pane\"\n      }, React.createElement(\"div\", {\n        className: \"menu\"\n      }, React.createElement(\"div\", {\n        className: this.state.showLog ? 'item' : 'item active',\n        onClick: this.onClickMain\n      }, \"Main\"), React.createElement(\"div\", {\n        className: this.state.showLog ? 'item active' : 'item',\n        onClick: this.onClickLog\n      }, \"Log\")), this.state.showLog || React.createElement(\"span\", null, this.state.showGameInfo && React.createElement(GameInfo, {\n        gameID: this.props.gameID,\n        playerID: this.props.playerID,\n        isActive: this.props.gamestate.isActive,\n        isConnected: this.props.gamestate.isConnected,\n        isMultiplayer: this.props.isMultiplayer\n      }), React.createElement(Controls, {\n        dockTop: this.state.dockControls,\n        help: this.state.help,\n        toggleHelp: this.toggleHelp,\n        step: this.props.step,\n        simulate: this.simulate,\n        reset: this.props.reset,\n        save: this.saveState,\n        restore: this.restoreState\n      }), React.createElement(\"h3\", null, \"Players\"), React.createElement(PlayerInfo, {\n        ctx: this.props.gamestate.ctx,\n        playerID: this.props.playerID,\n        onClick: this.props.updatePlayerID\n      }), React.createElement(\"h3\", null, \"Moves\"), React.createElement(\"section\", null, moves), React.createElement(\"h3\", null, \"Events\"), React.createElement(\"section\", null, events), React.createElement(\"section\", null, React.createElement(\"pre\", {\n        className: \"json\"\n      }, React.createElement(\"strong\", null, \"G\"), \":\", ' ', JSON.stringify(this.props.gamestate.G, null, 2))), React.createElement(\"section\", null, React.createElement(\"pre\", {\n        className: \"json\"\n      }, React.createElement(\"strong\", null, \"ctx\"), \":\", ' ', JSON.stringify(SanitizeCtx(this.props.gamestate.ctx), null, 2)))), this.state.showLog && React.createElement(\"section\", null, React.createElement(GameLog, {\n        onHover: this.onLogHover,\n        reducer: this.props.reducer,\n        log: this.props.gamestate.log,\n        initialState: this.props.gamestate._initial\n      }))));\n    }\n  }]);\n\n  return Debug;\n}(React.Component);\n\n_defineProperty(Debug, \"propTypes\", {\n  gamestate: PropTypes.shape({\n    G: PropTypes.any.isRequired,\n    ctx: PropTypes.any.isRequired,\n    log: PropTypes.array.isRequired,\n    isActive: PropTypes.bool,\n    isConnected: PropTypes.bool,\n    _initial: PropTypes.any.isRequired\n  }),\n  gameID: PropTypes.string.isRequired,\n  playerID: PropTypes.string,\n  isMultiplayer: PropTypes.bool,\n  moves: PropTypes.any,\n  events: PropTypes.any,\n  restore: PropTypes.func,\n  showLog: PropTypes.bool,\n  store: PropTypes.any,\n  step: PropTypes.func,\n  reset: PropTypes.func,\n  reducer: PropTypes.func,\n  overrideGameState: PropTypes.func,\n  visualizeAI: PropTypes.func,\n  updateGameID: PropTypes.func,\n  updatePlayerID: PropTypes.func,\n  updateCredentials: PropTypes.func,\n  showGameInfo: PropTypes.bool,\n  dockControls: PropTypes.bool\n});\n\n_defineProperty(Debug, \"defaultProps\", {\n  showGameInfo: true,\n  dockControls: false\n});","/*\n * Copyright 2018 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nexport function AssignShortcuts(moveNames, eventNames, blacklist) {\n  var shortcuts = {};\n  var events = {};\n\n  for (var name in moveNames) {\n    events[name] = name;\n  }\n\n  for (var _name in eventNames) {\n    events[_name] = _name;\n  }\n\n  var taken = {};\n\n  for (var i = 0; i < blacklist.length; i++) {\n    var c = blacklist[i];\n    taken[c] = true;\n  } // Try assigning the first char of each move as the shortcut.\n\n\n  var t = taken;\n  var canUseFirstChar = true;\n\n  for (var _name2 in events) {\n    var shortcut = _name2[0];\n\n    if (t[shortcut]) {\n      canUseFirstChar = false;\n      break;\n    }\n\n    t[shortcut] = true;\n    shortcuts[_name2] = shortcut;\n  }\n\n  if (canUseFirstChar) {\n    return shortcuts;\n  } // If those aren't unique, use a-z.\n\n\n  t = taken;\n  var next = 97;\n  shortcuts = {};\n\n  for (var _name3 in events) {\n    var _shortcut = String.fromCharCode(next);\n\n    while (t[_shortcut]) {\n      next++;\n      _shortcut = String.fromCharCode(next);\n    }\n\n    t[_shortcut] = true;\n    shortcuts[_name3] = _shortcut;\n  }\n\n  return shortcuts;\n}","import _toConsumableArray from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/*\n * Copyright 2018 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport PluginImmer from './plugin-immer';\n/**\n * List of plugins that are always added.\n */\n\nvar DEFAULT_PLUGINS = [PluginImmer];\n/**\n * Applies the provided plugins to ctx before processing a move / event.\n *\n * @param {object} ctx - The ctx object.\n * @param {object} plugins - The list of plugins.\n */\n\nvar CtxPreMove = function CtxPreMove(ctx, plugins) {\n  [].concat(DEFAULT_PLUGINS, _toConsumableArray(plugins)).filter(function (plugin) {\n    return plugin.ctx !== undefined;\n  }).filter(function (plugin) {\n    return plugin.ctx.preMove !== undefined;\n  }).forEach(function (plugin) {\n    ctx = plugin.ctx.preMove(ctx, plugins);\n  });\n  return ctx;\n};\n/**\n * Applies the provided plugins to G before processing a move / event.\n *\n * @param {object} G - The G object.\n * @param {object} plugins - The list of plugins.\n */\n\n\nvar GPreMove = function GPreMove(G, plugins) {\n  [].concat(DEFAULT_PLUGINS, _toConsumableArray(plugins)).filter(function (plugin) {\n    return plugin.G !== undefined;\n  }).filter(function (plugin) {\n    return plugin.G.preMove !== undefined;\n  }).forEach(function (plugin) {\n    G = plugin.G.preMove(G, plugins);\n  });\n  return G;\n};\n/**\n * Postprocesses G after a move / event.\n *\n * @param {object} G - The G object.\n * @param {object} plugins - The list of plugins.\n */\n\n\nvar GPostMove = function GPostMove(G, plugins) {\n  [].concat(DEFAULT_PLUGINS, _toConsumableArray(plugins)).filter(function (plugin) {\n    return plugin.G !== undefined;\n  }).filter(function (plugin) {\n    return plugin.G.postMove !== undefined;\n  }).forEach(function (plugin) {\n    G = plugin.G.postMove(G, plugins);\n  });\n  return G;\n};\n/**\n * Applies the provided plugins to the given move / flow function.\n *\n * @param {function} fn - The move function or trigger to apply the plugins to.\n * @param {object} plugins - The list of plugins.\n */\n\n\nexport var FnWrap = function FnWrap(fn, plugins) {\n  var reducer = function reducer(acc, _ref) {\n    var fnWrap = _ref.fnWrap;\n    return fnWrap(acc, plugins);\n  };\n\n  var g = [].concat(DEFAULT_PLUGINS, _toConsumableArray(plugins)).filter(function (plugin) {\n    return plugin.fnWrap !== undefined;\n  }).reduce(reducer, fn);\n  return function (G, ctx) {\n    G = GPreMove(G, plugins);\n    ctx = CtxPreMove(ctx, plugins);\n\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    G = g.apply(void 0, [G, ctx].concat(args));\n    G = GPostMove(G, plugins);\n    return G;\n  };\n};\nexport var G = {\n  /**\n   * Applies the provided plugins to G during game setup.\n   *\n   * @param {object} G - The G object.\n   * @param {object} ctx - The ctx object.\n   * @param {object} game - The game object.\n   */\n  setup: function setup(G, ctx, game) {\n    [].concat(DEFAULT_PLUGINS, _toConsumableArray(game.plugins)).filter(function (plugin) {\n      return plugin.G !== undefined;\n    }).filter(function (plugin) {\n      return plugin.G.setup !== undefined;\n    }).forEach(function (plugin) {\n      G = plugin.G.setup(G, ctx, game);\n    });\n    return G;\n  },\n\n  /**\n   * Applies the provided plugins to G during the beginning of the phase.\n   *\n   * @param {object} G - The G object.\n   * @param {object} ctx - The ctx object.\n   * @param {object} plugins - The list of plugins.\n   */\n  onPhaseBegin: function onPhaseBegin(G, ctx, plugins) {\n    [].concat(DEFAULT_PLUGINS, _toConsumableArray(plugins)).filter(function (plugin) {\n      return plugin.G !== undefined;\n    }).filter(function (plugin) {\n      return plugin.G.onPhaseBegin !== undefined;\n    }).forEach(function (plugin) {\n      G = plugin.G.onPhaseBegin(G, ctx, plugins);\n    });\n    return G;\n  }\n};\nexport var ctx = {\n  /**\n   * Applies the provided plugins to ctx during game setup.\n   *\n   * @param {object} ctx - The ctx object.\n   * @param {object} game - The game object.\n   */\n  setup: function setup(ctx, game) {\n    [].concat(DEFAULT_PLUGINS, _toConsumableArray(game.plugins)).filter(function (plugin) {\n      return plugin.ctx !== undefined;\n    }).filter(function (plugin) {\n      return plugin.ctx.setup !== undefined;\n    }).forEach(function (plugin) {\n      ctx = plugin.ctx.setup(ctx, game);\n    });\n    return ctx;\n  },\n\n  /**\n   * Applies the provided plugins to ctx during the beginning of the phase.\n   *\n   * @param {object} ctx - The ctx object.\n   * @param {object} plugins - The list of plugins.\n   */\n  onPhaseBegin: function onPhaseBegin(ctx, plugins) {\n    [].concat(DEFAULT_PLUGINS, _toConsumableArray(plugins)).filter(function (plugin) {\n      return plugin.ctx !== undefined;\n    }).filter(function (plugin) {\n      return plugin.ctx.onPhaseBegin !== undefined;\n    }).forEach(function (plugin) {\n      ctx = plugin.ctx.onPhaseBegin(ctx, plugins);\n    });\n    return ctx;\n  }\n};","/*\n * Copyright 2018 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport produce from 'immer';\n/**\n * Plugin that allows using Immer to make immutable changes\n * to G by just mutating it.\n */\n\nexport default {\n  fnWrap: function fnWrap(move) {\n    return produce(move);\n  }\n};","import _objectSpread from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/*\n * Copyright 2017 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport * as logging from './logger';\n/**\n * Standard move that simulates passing.\n *\n * Creates two objects in G:\n * passOrder - An array of playerIDs capturing passes in the pass order.\n * allPassed - Set to true when all players have passed.\n */\n\nexport var Pass = function Pass(G, ctx) {\n  var passOrder = [];\n\n  if (G.passOrder !== undefined) {\n    passOrder = G.passOrder;\n  }\n\n  var playerID = ctx.playerID;\n  passOrder = [].concat(_toConsumableArray(passOrder), [playerID]);\n  G = _objectSpread({}, G, {\n    passOrder: passOrder\n  });\n\n  if (passOrder.length >= ctx.numPlayers) {\n    G = _objectSpread({}, G, {\n      allPassed: true\n    });\n  }\n\n  return G;\n};\n/**\n * Event to change the active players (and their stages) in the current turn.\n * @param {*} state\n * @param {*} arg\n */\n\nexport function SetActivePlayersEvent(state, arg) {\n  return _objectSpread({}, state, {\n    ctx: SetActivePlayers(state.ctx, arg)\n  });\n}\nexport function SetActivePlayers(ctx, arg) {\n  var _prevActivePlayers = ctx._prevActivePlayers;\n\n  var _nextActivePlayers = arg.next || null;\n\n  if (arg.revert) {\n    _prevActivePlayers = _prevActivePlayers.concat({\n      activePlayers: ctx.activePlayers,\n      _activePlayersMoveLimit: ctx._activePlayersMoveLimit,\n      _activePlayersNumMoves: ctx._activePlayersNumMoves\n    });\n  } else {\n    _prevActivePlayers = [];\n  }\n\n  var activePlayers = {};\n\n  if (arg.value) {\n    activePlayers = arg.value;\n  }\n\n  if (arg.currentPlayer !== undefined) {\n    activePlayers[ctx.currentPlayer] = arg.currentPlayer;\n  }\n\n  if (arg.others !== undefined) {\n    for (var i = 0; i < ctx.playOrder.length; i++) {\n      var playerID = ctx.playOrder[i];\n\n      if (playerID !== ctx.currentPlayer) {\n        activePlayers[playerID] = arg.others;\n      }\n    }\n  }\n\n  if (arg.all !== undefined) {\n    for (var _i = 0; _i < ctx.playOrder.length; _i++) {\n      var _playerID = ctx.playOrder[_i];\n      activePlayers[_playerID] = arg.all;\n    }\n  }\n\n  if (Object.keys(activePlayers).length == 0) {\n    activePlayers = null;\n  }\n\n  var _activePlayersMoveLimit = null;\n\n  if (activePlayers && arg.moveLimit) {\n    if (typeof arg.moveLimit === 'number') {\n      _activePlayersMoveLimit = {};\n\n      for (var id in activePlayers) {\n        _activePlayersMoveLimit[id] = arg.moveLimit;\n      }\n    } else {\n      _activePlayersMoveLimit = {};\n\n      if (arg.moveLimit.value) {\n        _activePlayersMoveLimit = arg.moveLimit.value;\n      }\n\n      if (arg.moveLimit.currentPlayer !== undefined && activePlayers[ctx.currentPlayer]) {\n        _activePlayersMoveLimit[ctx.currentPlayer] = arg.moveLimit.currentPlayer;\n      }\n\n      if (arg.moveLimit.others !== undefined) {\n        for (var _id in activePlayers) {\n          if (_id !== ctx.currentPlayer) {\n            _activePlayersMoveLimit[_id] = arg.moveLimit.others;\n          }\n        }\n      }\n    }\n  }\n\n  var _activePlayersNumMoves = {};\n\n  for (var _id2 in activePlayers) {\n    _activePlayersNumMoves[_id2] = 0;\n  }\n\n  return _objectSpread({}, ctx, {\n    activePlayers: activePlayers,\n    _activePlayersMoveLimit: _activePlayersMoveLimit,\n    _activePlayersNumMoves: _activePlayersNumMoves,\n    _prevActivePlayers: _prevActivePlayers,\n    _nextActivePlayers: _nextActivePlayers\n  });\n}\n/**\n * Update activePlayers, setting it to previous, next or null values\n * when it becomes empty.\n * @param {Object} ctx\n */\n\nexport function UpdateActivePlayersOnceEmpty(ctx) {\n  var _ctx = ctx,\n      activePlayers = _ctx.activePlayers,\n      _activePlayersMoveLimit = _ctx._activePlayersMoveLimit,\n      _activePlayersNumMoves = _ctx._activePlayersNumMoves,\n      _prevActivePlayers = _ctx._prevActivePlayers;\n\n  if (activePlayers && Object.keys(activePlayers).length == 0) {\n    if (ctx._nextActivePlayers) {\n      ctx = SetActivePlayers(ctx, ctx._nextActivePlayers);\n      var _ctx2 = ctx;\n      activePlayers = _ctx2.activePlayers;\n      _activePlayersMoveLimit = _ctx2._activePlayersMoveLimit;\n      _activePlayersNumMoves = _ctx2._activePlayersNumMoves;\n      _prevActivePlayers = _ctx2._prevActivePlayers;\n    } else if (_prevActivePlayers.length > 0) {\n      var lastIndex = _prevActivePlayers.length - 1;\n      var _prevActivePlayers$la = _prevActivePlayers[lastIndex];\n      activePlayers = _prevActivePlayers$la.activePlayers;\n      _activePlayersMoveLimit = _prevActivePlayers$la._activePlayersMoveLimit;\n      _activePlayersNumMoves = _prevActivePlayers$la._activePlayersNumMoves;\n      _prevActivePlayers = _prevActivePlayers.slice(0, lastIndex);\n    } else {\n      activePlayers = null;\n      _activePlayersMoveLimit = null;\n    }\n  }\n\n  return _objectSpread({}, ctx, {\n    activePlayers: activePlayers,\n    _activePlayersMoveLimit: _activePlayersMoveLimit,\n    _activePlayersNumMoves: _activePlayersNumMoves,\n    _prevActivePlayers: _prevActivePlayers\n  });\n}\n/**\n * Converts a playOrderPos index into its value in playOrder.\n * @param {Array} playOrder - An array of player ID's.\n * @param {number} playOrderPos - An index into the above.\n */\n\nfunction getCurrentPlayer(playOrder, playOrderPos) {\n  return playOrder[playOrderPos] + '';\n}\n/**\n * Called at the start of a turn to initialize turn order state.\n *\n * TODO: This is called inside StartTurn, which is called from\n * both UpdateTurn and StartPhase (so it's called at the beginning\n * of a new phase as well as between turns). We should probably\n * split it into two.\n *\n * @param {object} G - The game object G.\n * @param {object} ctx - The game object ctx.\n * @param {object} turn - A turn object for this phase.\n */\n\n\nexport function InitTurnOrderState(G, ctx, turn) {\n  var order = turn.order;\n\n  var playOrder = _toConsumableArray(new Array(ctx.numPlayers)).map(function (d, i) {\n    return i + '';\n  });\n\n  if (order.playOrder !== undefined) {\n    playOrder = order.playOrder(G, ctx);\n  }\n\n  var playOrderPos = order.first(G, ctx);\n  var currentPlayer = getCurrentPlayer(playOrder, playOrderPos);\n  ctx = _objectSpread({}, ctx, {\n    currentPlayer: currentPlayer,\n    playOrderPos: playOrderPos,\n    playOrder: playOrder\n  });\n  ctx = SetActivePlayers(ctx, turn.activePlayers || {});\n  return ctx;\n}\n/**\n * Called at the end of each turn to update the turn order state.\n * @param {object} G - The game object G.\n * @param {object} ctx - The game object ctx.\n * @param {object} turn - A turn object for this phase.\n * @param {string} endTurnArg - An optional argument to endTurn that\n                                may specify the next player.\n */\n\nexport function UpdateTurnOrderState(G, ctx, turn, endTurnArg) {\n  var order = turn.order;\n  var playOrderPos = ctx.playOrderPos;\n  var currentPlayer = ctx.currentPlayer;\n  var endPhase = false;\n\n  if (endTurnArg && endTurnArg !== true) {\n    if (ctx.playOrder.includes(endTurnArg.next)) {\n      playOrderPos = ctx.playOrder.indexOf(endTurnArg.next);\n      currentPlayer = endTurnArg.next;\n    } else {\n      logging.error(\"invalid argument to endTurn: \".concat(endTurnArg));\n    }\n  } else {\n    var t = order.next(G, ctx);\n\n    if (t === undefined) {\n      endPhase = true;\n    } else {\n      playOrderPos = t;\n      currentPlayer = getCurrentPlayer(ctx.playOrder, playOrderPos);\n    }\n  }\n\n  ctx = _objectSpread({}, ctx, {\n    playOrderPos: playOrderPos,\n    currentPlayer: currentPlayer\n  });\n  return {\n    endPhase: endPhase,\n    ctx: ctx\n  };\n}\n/**\n * Set of different turn orders possible in a phase.\n * These are meant to be passed to the `turn` setting\n * in the flow objects.\n *\n * Each object defines the first player when the phase / game\n * begins, and also a function `next` to determine who the\n * next player is when the turn ends.\n *\n * The phase ends if next() returns undefined.\n */\n\nexport var TurnOrder = {\n  /**\n   * DEFAULT\n   *\n   * The default round-robin turn order.\n   */\n  DEFAULT: {\n    first: function first(G, ctx) {\n      return ctx.playOrderPos;\n    },\n    next: function next(G, ctx) {\n      return (ctx.playOrderPos + 1) % ctx.playOrder.length;\n    }\n  },\n\n  /**\n   * RESET\n   *\n   * Similar to DEFAULT, but starts from 0 each time.\n   */\n  RESET: {\n    first: function first() {\n      return 0;\n    },\n    next: function next(G, ctx) {\n      return (ctx.playOrderPos + 1) % ctx.playOrder.length;\n    }\n  },\n\n  /**\n   * ONCE\n   *\n   * Another round-robin turn order, but goes around just once.\n   * The phase ends after all players have played.\n   */\n  ONCE: {\n    first: function first() {\n      return 0;\n    },\n    next: function next(G, ctx) {\n      if (ctx.playOrderPos < ctx.playOrder.length - 1) {\n        return ctx.playOrderPos + 1;\n      }\n    }\n  },\n\n  /**\n   * CUSTOM\n   *\n   * Identical to DEFAULT, but also sets playOrder at the\n   * beginning of the phase.\n   *\n   * @param {Array} playOrder - The play order.\n   */\n  CUSTOM: function CUSTOM(_playOrder) {\n    return {\n      playOrder: function playOrder() {\n        return _playOrder;\n      },\n      first: function first() {\n        return 0;\n      },\n      next: function next(G, ctx) {\n        return (ctx.playOrderPos + 1) % ctx.playOrder.length;\n      }\n    };\n  },\n\n  /**\n   * CUSTOM_FROM\n   *\n   * Identical to DEFAULT, but also sets playOrder at the\n   * beginning of the phase to a value specified by a field\n   * in G.\n   *\n   * @param {string} playOrderField - Field in G.\n   */\n  CUSTOM_FROM: function CUSTOM_FROM(playOrderField) {\n    return {\n      playOrder: function playOrder(G) {\n        return G[playOrderField];\n      },\n      first: function first() {\n        return 0;\n      },\n      next: function next(G, ctx) {\n        return (ctx.playOrderPos + 1) % ctx.playOrder.length;\n      }\n    };\n  },\n\n  /**\n   * SKIP\n   *\n   * Round-robin, but skips over any players that have passed.\n   * Meant to be used with Pass above.\n   */\n  SKIP: {\n    first: function first(G, ctx) {\n      return ctx.playOrderPos;\n    },\n    next: function next(G, ctx) {\n      if (G.allPassed) return;\n      var playOrderPos = ctx.playOrderPos;\n\n      for (var i = 0; i < ctx.playOrder.length; i++) {\n        playOrderPos = (playOrderPos + 1) % ctx.playOrder.length;\n\n        if (!G.passOrder.includes(ctx.playOrder[playOrderPos] + '')) {\n          return playOrderPos;\n        }\n      }\n    }\n  }\n};\nexport var Stage = {\n  NULL: null\n};\nexport var ActivePlayers = {\n  /**\n   * ALL\n   *\n   * The turn stays with one player, but any player can play (in any order)\n   * until the phase ends.\n   */\n  ALL: {\n    all: Stage.NULL\n  },\n\n  /**\n   * ALL_ONCE\n   *\n   * The turn stays with one player, but any player can play (once, and in any order).\n   * This is typically used in a phase where you want to elicit a response\n   * from every player in the game.\n   */\n  ALL_ONCE: {\n    all: Stage.NULL,\n    moveLimit: 1\n  },\n\n  /**\n   * OTHERS\n   *\n   * The turn stays with one player, and every *other* player can play (in any order)\n   * until the phase ends.\n   */\n  OTHERS: {\n    others: Stage.NULL\n  },\n\n  /**\n   * OTHERS_ONCE\n   *\n   * The turn stays with one player, and every *other* player can play (once, and in any order).\n   * This is typically used in a phase where you want to elicit a response\n   * from every *other* player in the game.\n   */\n  OTHERS_ONCE: {\n    others: Stage.NULL,\n    moveLimit: 1\n  }\n};","// Inlined version of Alea from https://github.com/davidbau/seedrandom.\n\n/*\n * Copyright 2015 David Bau.\n *\n * Permission is hereby granted, free of charge,\n * to any person obtaining a copy of this software\n * and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge,\n * publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall\n * be included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nfunction Alea(seed) {\n  var me = this,\n      mash = Mash();\n\n  me.next = function () {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  }; // Apply the seeding algorithm from Baagoe.\n\n\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n\n  if (me.s0 < 0) {\n    me.s0 += 1;\n  }\n\n  me.s1 -= mash(seed);\n\n  if (me.s1 < 0) {\n    me.s1 += 1;\n  }\n\n  me.s2 -= mash(seed);\n\n  if (me.s2 < 0) {\n    me.s2 += 1;\n  }\n\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function mash(data) {\n    data = data.toString();\n\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\nexport function alea(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.quick = prng;\n\n  if (state) {\n    if (typeof state == 'object') copy(state, xg);\n\n    prng.state = function () {\n      return copy(xg, {});\n    };\n  }\n\n  return prng;\n}","import _objectWithoutProperties from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*\n * Copyright 2017 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport { alea } from './random.alea';\n/**\n * Random\n *\n * Calls that require a pseudorandom number generator.\n * Uses a seed from ctx, and also persists the PRNG\n * state in ctx so that moves can stay pure.\n */\n\nexport var Random =\n/*#__PURE__*/\nfunction () {\n  /**\n   * constructor\n   * @param {object} ctx - The ctx object to initialize from.\n   */\n  function Random(ctx) {\n    _classCallCheck(this, Random);\n\n    // If we are on the client, the seed is not present.\n    // Just use a temporary seed to execute the move without\n    // crashing it. The move state itself is discarded,\n    // so the actual value doesn't matter.\n    this.state = ctx._random || {\n      seed: '0'\n    };\n  }\n  /**\n   * Updates ctx with the PRNG state.\n   * @param {object} ctx - The ctx object to update.\n   */\n\n\n  _createClass(Random, [{\n    key: \"update\",\n    value: function update(state) {\n      var ctx = _objectSpread({}, state.ctx, {\n        _random: this.state\n      });\n\n      return _objectSpread({}, state, {\n        ctx: ctx\n      });\n    }\n    /**\n     * Attaches the Random API to ctx.\n     * @param {object} ctx - The ctx object to attach to.\n     */\n\n  }, {\n    key: \"attach\",\n    value: function attach(ctx) {\n      return _objectSpread({}, ctx, {\n        random: this._api()\n      });\n    }\n    /**\n     * Generate a random number.\n     */\n\n  }, {\n    key: \"_random\",\n    value: function _random() {\n      var R = this.state;\n      var fn;\n\n      if (R.prngstate === undefined) {\n        // No call to a random function has been made.\n        fn = new alea(R.seed, {\n          state: true\n        });\n      } else {\n        fn = new alea('', {\n          state: R.prngstate\n        });\n      }\n\n      var number = fn();\n      this.state = _objectSpread({}, R, {\n        prngstate: fn.state()\n      });\n      return number;\n    }\n  }, {\n    key: \"_api\",\n    value: function _api() {\n      var random = this._random.bind(this);\n\n      var SpotValue = {\n        D4: 4,\n        D6: 6,\n        D8: 8,\n        D10: 10,\n        D12: 12,\n        D20: 20\n      }; // Generate functions for predefined dice values D4 - D20.\n\n      var predefined = {};\n\n      var _loop = function _loop(key) {\n        var spotvalue = SpotValue[key];\n\n        predefined[key] = function (diceCount) {\n          if (diceCount === undefined) {\n            return Math.floor(random() * spotvalue) + 1;\n          } else {\n            return _toConsumableArray(new Array(diceCount).keys()).map(function () {\n              return Math.floor(random() * spotvalue) + 1;\n            });\n          }\n        };\n      };\n\n      for (var key in SpotValue) {\n        _loop(key);\n      }\n\n      return _objectSpread({}, predefined, {\n        /**\n         * Roll a die of specified spot value.\n         *\n         * @param {number} spotvalue - The die dimension (default: 6).\n         * @param {number} diceCount - number of dice to throw.\n         *                             if not defined, defaults to 1 and returns the value directly.\n         *                             if defined, returns an array containing the random dice values.\n         */\n        Die: function Die(spotvalue, diceCount) {\n          if (spotvalue === undefined) {\n            spotvalue = 6;\n          }\n\n          if (diceCount === undefined) {\n            return Math.floor(random() * spotvalue) + 1;\n          } else {\n            return _toConsumableArray(new Array(diceCount).keys()).map(function () {\n              return Math.floor(random() * spotvalue) + 1;\n            });\n          }\n        },\n\n        /**\n         * Generate a random number between 0 and 1.\n         */\n        Number: function Number() {\n          return random();\n        },\n\n        /**\n         * Shuffle an array.\n         *\n         * @param {Array} deck - The array to shuffle. Does not mutate\n         *                       the input, but returns the shuffled array.\n         */\n        Shuffle: function Shuffle(deck) {\n          var clone = deck.slice(0);\n          var srcIndex = deck.length;\n          var dstIndex = 0;\n          var shuffled = new Array(srcIndex);\n\n          while (srcIndex) {\n            var randIndex = srcIndex * random() | 0;\n            shuffled[dstIndex++] = clone[randIndex];\n            clone[randIndex] = clone[--srcIndex];\n          }\n\n          return shuffled;\n        }\n      });\n    }\n  }]);\n\n  return Random;\n}();\n/**\n * Removes the attached Random api from ctx.\n *\n * @param {object} ctx - The ctx object with the Random API attached.\n * @returns {object} A plain ctx object without the Random API.\n */\n\nRandom.detach = function (ctx) {\n  var random = ctx.random,\n      rest = _objectWithoutProperties(ctx, [\"random\"]); // eslint-disable-line no-unused-vars\n\n\n  return rest;\n};\n/**\n * Generates a new seed from the current date / time.\n */\n\n\nRandom.seed = function () {\n  return (+new Date()).toString(36).slice(-10);\n};","import _objectWithoutProperties from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*\n * Copyright 2018 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport { automaticGameEvent } from './action-creators';\n/**\n * Events\n */\n\nexport var Events =\n/*#__PURE__*/\nfunction () {\n  function Events(flow, playerID) {\n    _classCallCheck(this, Events);\n\n    this.flow = flow;\n    this.playerID = playerID;\n    this.dispatch = [];\n  }\n  /**\n   * Attaches the Events API to ctx.\n   * @param {object} ctx - The ctx object to attach to.\n   */\n\n\n  _createClass(Events, [{\n    key: \"attach\",\n    value: function attach(ctx) {\n      var _this = this;\n\n      var events = {};\n      var phase = ctx.phase,\n          turn = ctx.turn;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        var _loop = function _loop() {\n          var key = _step.value;\n\n          events[key] = function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            _this.dispatch.push({\n              key: key,\n              args: args,\n              phase: phase,\n              turn: turn\n            });\n          };\n        };\n\n        for (var _iterator = this.flow.eventNames[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          _loop();\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return _objectSpread({}, ctx, {\n        events: events\n      });\n    }\n    /**\n     * Updates ctx with the triggered events.\n     * @param {object} state - The state object { G, ctx }.\n     */\n\n  }, {\n    key: \"update\",\n    value: function update(state) {\n      var length = this.dispatch.length;\n\n      for (var i = 0; i < length; i++) {\n        var item = this.dispatch[i]; // If the turn already ended some other way,\n        // don't try to end the turn again.\n\n        if (item.key === 'endTurn' && item.turn !== state.ctx.turn) {\n          continue;\n        } // If the phase already ended some other way,\n        // don't try to end the phase again.\n\n\n        if (item.key === 'endPhase' && item.phase !== state.ctx.phase) {\n          continue;\n        }\n\n        var action = automaticGameEvent(item.key, item.args, this.playerID);\n        state = _objectSpread({}, state, this.flow.processGameEvent(state, action));\n      }\n\n      return state;\n    }\n  }]);\n\n  return Events;\n}();\n/**\n * Detaches the Events API from ctx.\n * @param {object} ctx - The ctx object to strip.\n */\n\nEvents.detach = function (ctx) {\n  var events = ctx.events,\n      rest = _objectWithoutProperties(ctx, [\"events\"]); // eslint-disable-line no-unused-vars\n\n\n  return rest;\n};","import _objectWithoutProperties from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Random } from './random';\nimport { Events } from './events';\n/**\n * Context API to allow writing custom logs in games.\n */\n\nexport var GameLoggerCtxAPI =\n/*#__PURE__*/\nfunction () {\n  function GameLoggerCtxAPI() {\n    _classCallCheck(this, GameLoggerCtxAPI);\n\n    this._payload = undefined;\n  }\n\n  _createClass(GameLoggerCtxAPI, [{\n    key: \"_api\",\n    value: function _api() {\n      var _this = this;\n\n      return {\n        setPayload: function setPayload(payload) {\n          _this._payload = payload;\n        }\n      };\n    }\n  }, {\n    key: \"attach\",\n    value: function attach(ctx) {\n      return _objectSpread({}, ctx, {\n        log: this._api()\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update(state) {\n      if (this._payload === undefined) {\n        return state;\n      } // attach the payload to the last log event\n\n\n      var deltalog = state.deltalog;\n      deltalog[deltalog.length - 1] = _objectSpread({}, deltalog[deltalog.length - 1], {\n        payload: this._payload\n      });\n      this._payload = undefined;\n      return _objectSpread({}, state, {\n        deltalog: deltalog\n      });\n    }\n  }], [{\n    key: \"detach\",\n    value: function detach(ctx) {\n      var log = ctx.log,\n          ctxWithoutLog = _objectWithoutProperties(ctx, [\"log\"]); // eslint-disable-line no-unused-vars\n\n\n      return ctxWithoutLog;\n    }\n  }]);\n\n  return GameLoggerCtxAPI;\n}();\n/**\n * This class is used to attach/detach various utility objects\n * onto a ctx, without having to manually attach/detach them\n * all separately.\n */\n\nexport var ContextEnhancer =\n/*#__PURE__*/\nfunction () {\n  function ContextEnhancer(ctx, game, player) {\n    _classCallCheck(this, ContextEnhancer);\n\n    this.random = new Random(ctx);\n    this.events = new Events(game.flow, player);\n    this.log = new GameLoggerCtxAPI();\n  }\n\n  _createClass(ContextEnhancer, [{\n    key: \"attachToContext\",\n    value: function attachToContext(ctx) {\n      var ctxWithAPI = this.random.attach(ctx);\n      ctxWithAPI = this.events.attach(ctxWithAPI);\n      ctxWithAPI = this.log.attach(ctxWithAPI);\n      return ctxWithAPI;\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(state, updateEvents) {\n      var newState = updateEvents ? this.events.update(state) : state;\n      newState = this.random.update(newState);\n      newState = this.log.update(newState);\n      return newState;\n    }\n  }, {\n    key: \"updateAndDetach\",\n    value: function updateAndDetach(state, updateEvents) {\n      var newState = this._update(state, updateEvents);\n\n      newState.ctx = ContextEnhancer.detachAllFromContext(newState.ctx);\n      return newState;\n    }\n  }], [{\n    key: \"detachAllFromContext\",\n    value: function detachAllFromContext(ctx) {\n      var ctxWithoutAPI = Random.detach(ctx);\n      ctxWithoutAPI = Events.detach(ctxWithoutAPI);\n      ctxWithoutAPI = GameLoggerCtxAPI.detach(ctxWithoutAPI);\n      return ctxWithoutAPI;\n    }\n  }]);\n\n  return ContextEnhancer;\n}();","import _toConsumableArray from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/*\n * Copyright 2017 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport { SetActivePlayersEvent, SetActivePlayers, UpdateActivePlayersOnceEmpty, InitTurnOrderState, UpdateTurnOrderState, Stage, TurnOrder } from './turn-order';\nimport { gameEvent } from './action-creators';\nimport * as plugin from '../plugins/main';\nimport { ContextEnhancer } from './context-enhancer';\nimport * as logging from './logger';\n/**\n * Helper to create a reducer that manages ctx (with the\n * ability to also update G).\n *\n * This is mostly around for legacy reasons. The original plan\n * was to have two flows, one with phases etc. and another\n * simpler one like this. The current state is such that this\n * is merely an internal function of Flow below.\n *\n * @param {...object} ctx - Function with the signature\n *                          numPlayers => ctx\n *                          that determines the initial value of ctx.\n * @param {...object} eventHandlers - Object containing functions\n *                                    named after events that this\n *                                    reducer will handle. Each function\n *                                    has the following signature:\n *                                    ({G, ctx}) => {G, ctx}\n * @param {...object} enabledEvents - Map of eventName -> bool indicating\n *                                    which events are callable from the client\n *                                    or from within moves.\n * @param {...object} processMove - A function that's called whenever a move is made.\n *                                  (state, action, dispatch) => state.\n */\n\nexport function FlowInternal(_ref) {\n  var ctx = _ref.ctx,\n      eventHandlers = _ref.eventHandlers,\n      enabledEvents = _ref.enabledEvents,\n      init = _ref.init,\n      _processMove = _ref.processMove,\n      moveMap = _ref.moveMap,\n      moveNames = _ref.moveNames,\n      getMove = _ref.getMove;\n  if (!ctx) ctx = function ctx() {\n    return {};\n  };\n  if (!eventHandlers) eventHandlers = {};\n  if (!enabledEvents) enabledEvents = {};\n  if (!init) init = function init(state) {\n    return state;\n  };\n  if (!_processMove) _processMove = function processMove(state) {\n    return state;\n  };\n\n  var dispatch = function dispatch(state, action) {\n    var payload = action.payload;\n\n    if (eventHandlers.hasOwnProperty(payload.type)) {\n      var context = {\n        playerID: payload.playerID,\n        dispatch: dispatch\n      };\n      var args = [state].concat(payload.args);\n      return eventHandlers[payload.type].apply(context, args);\n    }\n\n    return state;\n  };\n\n  return {\n    ctx: ctx,\n    init: init,\n    moveMap: moveMap,\n    moveNames: moveNames,\n    getMove: getMove,\n    eventNames: Object.keys(eventHandlers),\n    enabledEventNames: Object.keys(enabledEvents),\n    processMove: function processMove(state, action) {\n      return _processMove(state, action);\n    },\n    processGameEvent: function processGameEvent(state, action) {\n      return dispatch(state, action);\n    },\n    canPlayerCallEvent: function canPlayerCallEvent(_G, ctx, playerID) {\n      var isCurrentPlayer = ctx.currentPlayer == playerID;\n\n      if (ctx.activePlayers) {\n        return isCurrentPlayer && ctx.currentPlayer in ctx.activePlayers;\n      }\n\n      return isCurrentPlayer;\n    },\n    canPlayerMakeMove: function canPlayerMakeMove(_G, ctx, action) {\n      var playerID = action.payload.playerID;\n      var move = getMove(ctx, action.payload.type, playerID);\n\n      if (move === null) {\n        return false;\n      }\n\n      if (ctx.activePlayers) {\n        if (!(playerID in ctx.activePlayers)) {\n          return false;\n        }\n      } else {\n        if (ctx.currentPlayer !== playerID) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n    canPlayerMakeAnyMove: function canPlayerMakeAnyMove(_G, ctx, playerID) {\n      if (ctx.activePlayers) {\n        return playerID in ctx.activePlayers;\n      }\n\n      return ctx.currentPlayer === playerID;\n    }\n  };\n}\n/**\n * Flow\n *\n * Creates a reducer that updates ctx (analogous to how moves update G).\n *\n * @param {...object} endIf - The game automatically ends if this function\n *                            returns anything (checked after each move).\n *                            The return value is available at ctx.gameover.\n *                            (G, ctx) => {}\n *\n * @param {...object} turn - Customize the turn structure (see turn-order.js).\n *\n * {\n *   // The turn order.\n *   order: TurnOrder.DEFAULT,\n *\n *   // Code to run at the beginning of the turn.\n *   onBegin: (G, ctx) => G,\n *\n *   // Code to run at the end of the turn.\n *   onEnd: (G, ctx) => G,\n *\n *   // The turn automatically ends if this returns a truthy\n *   // value (checked after each move).\n *   // If the return value is { next: playerID },\n *   // then that player is the next player\n *   // instead of following the turn order.\n *   endIf: (G, ctx) => boolean|object,\n *\n *   // End the turn automatically after a certain number\n *   // of moves.\n *   moveLimit: 1,\n *\n *   // Code to run at the end of a move.\n *   onMove: (G, ctx, { type: 'moveName', args: [] }) => G\n * }\n *\n * @param {...object} events - Section that allows enabling / disabling events.\n *\n * {\n *   endTurn - Set to false to disable the `endTurn` event.\n *\n *   endPhase - Set to false to disable the `endPhase` event.\n *\n *   endGame - Set to true to enable the `endGame` event.\n * }\n *\n *\n * @param {...object} phases - A map of phases in the game.\n *\n * {\n *   // Any setup code to run before the phase begins.\n *   onBegin: (G, ctx) => G,\n *\n *   // Any cleanup code to run after the phase ends.\n *   onEnd: (G, ctx) => G,\n *\n *   // The phase ends if this function returns a truthy value.\n *   // If the return value is of the form { next: 'phase name' }\n *   // then that will be chosen as the next phase.\n *   endIf: (G, ctx) => boolean|object,\n *\n *   // A phase-specific set of moves that overrides the global.\n *   moves: { ... },\n *\n *   // A phase-specific turn structure that overrides the global.\n *   turn: { ... },\n *\n *   // Set to true to begin the game in this phase. Only one phase\n *   // can have this set to true.\n *   start: false,\n * }\n */\n\nexport function Flow(_ref2) {\n  var moves = _ref2.moves,\n      phases = _ref2.phases,\n      endIf = _ref2.endIf,\n      turn = _ref2.turn,\n      events = _ref2.events,\n      plugins = _ref2.plugins;\n\n  // Attach defaults.\n  if (moves === undefined) {\n    moves = {};\n  }\n\n  if (events === undefined) {\n    events = {};\n  }\n\n  if (events.setActivePlayers === undefined) {\n    events.setActivePlayers = true;\n  }\n\n  if (events.endStage === undefined) {\n    events.endStage = true;\n    events.setStage = true;\n  }\n\n  if (events.endPhase === undefined && phases) {\n    events.endPhase = true;\n    events.setPhase = true;\n  }\n\n  if (events.endTurn === undefined) {\n    events.endTurn = true;\n  }\n\n  if (events.endGame === undefined) {\n    events.endGame = false;\n  }\n\n  if (plugins === undefined) {\n    plugins = [];\n  }\n\n  if (!endIf) endIf = function endIf() {\n    return undefined;\n  };\n  if (!turn) turn = {};\n  var phaseMap = phases || {};\n\n  if ('' in phaseMap) {\n    logging.error('cannot specify phase with empty name');\n  }\n\n  phaseMap[''] = {};\n  var moveMap = {};\n  var moveNames = new Set();\n  var startingPhase = null;\n  Object.keys(moves).forEach(function (name) {\n    return moveNames.add(name);\n  });\n\n  for (var phase in phaseMap) {\n    var conf = phaseMap[phase];\n\n    if (conf.start === true) {\n      startingPhase = phase;\n    }\n\n    if (conf.moves !== undefined) {\n      var _arr = Object.keys(conf.moves);\n\n      for (var _i = 0; _i < _arr.length; _i++) {\n        var move = _arr[_i];\n        moveMap[phase + '.' + move] = conf.moves[move];\n        moveNames.add(move);\n      }\n    }\n\n    if (conf.endIf === undefined) {\n      conf.endIf = function () {\n        return undefined;\n      };\n    }\n\n    if (conf.onBegin === undefined) {\n      conf.onBegin = function (G) {\n        return G;\n      };\n    }\n\n    conf.onBegin = plugin.FnWrap(conf.onBegin, plugins);\n\n    if (conf.onEnd === undefined) {\n      conf.onEnd = function (G) {\n        return G;\n      };\n    }\n\n    conf.onEnd = plugin.FnWrap(conf.onEnd, plugins);\n\n    if (conf.turn === undefined) {\n      conf.turn = turn;\n    }\n\n    if (conf.turn.order === undefined) {\n      conf.turn.order = TurnOrder.DEFAULT;\n    }\n\n    if (conf.turn.onBegin === undefined) {\n      conf.turn.onBegin = function (G) {\n        return G;\n      };\n    }\n\n    if (conf.turn.onEnd === undefined) {\n      conf.turn.onEnd = function (G) {\n        return G;\n      };\n    }\n\n    if (conf.turn.endIf === undefined) {\n      conf.turn.endIf = function () {\n        return false;\n      };\n    }\n\n    if (conf.turn.onMove === undefined) {\n      conf.turn.onMove = function (G) {\n        return G;\n      };\n    }\n\n    if (conf.turn.stages === undefined) {\n      conf.turn.stages = {};\n    }\n\n    for (var stage in conf.turn.stages) {\n      var stageConfig = conf.turn.stages[stage];\n\n      var _moves = stageConfig.moves || {};\n\n      var _arr2 = Object.keys(_moves);\n\n      for (var _i2 = 0; _i2 < _arr2.length; _i2++) {\n        var _move = _arr2[_i2];\n        var key = phase + '.' + stage + '.' + _move;\n        moveMap[key] = _moves[_move];\n        moveNames.add(_move);\n      }\n    }\n\n    conf.turn.onMove = plugin.FnWrap(conf.turn.onMove, plugins);\n    conf.turn.onBegin = plugin.FnWrap(conf.turn.onBegin, plugins);\n    conf.turn.onEnd = plugin.FnWrap(conf.turn.onEnd, plugins);\n  }\n\n  function GetPhase(ctx) {\n    return ctx.phase ? phaseMap[ctx.phase] : phaseMap[''];\n  }\n\n  function OnMove(s) {\n    return s;\n  }\n\n  function ProcessEvents(state, events) {\n    var phasesEnded = new Set();\n    var turnsEnded = new Set();\n\n    for (var i = 0; i < events.length; i++) {\n      var _events$i = events[i],\n          fn = _events$i.fn,\n          arg = _events$i.arg,\n          rest = _objectWithoutProperties(_events$i, [\"fn\", \"arg\"]); // Detect a loop of EndPhase calls.\n      // This could potentially even be an infinite loop\n      // if the endIf condition of each phase blindly\n      // returns true. The moment we detect a single\n      // loop, we just bail out of all phases.\n\n\n      if (fn === EndPhase) {\n        turnsEnded.clear();\n        var _phase = state.ctx.phase;\n\n        if (phasesEnded.has(_phase)) {\n          var ctx = _objectSpread({}, state.ctx, {\n            phase: null\n          });\n\n          return _objectSpread({}, state, {\n            ctx: ctx\n          });\n        }\n\n        phasesEnded.add(_phase);\n      } // Process event.\n\n\n      var next = [];\n      state = fn(state, _objectSpread({}, rest, {\n        arg: arg,\n        next: next\n      }));\n\n      if (fn === EndGame) {\n        break;\n      } // Check if we should end the game.\n\n\n      var shouldEndGame = ShouldEndGame(state);\n\n      if (shouldEndGame) {\n        events.push({\n          fn: EndGame,\n          arg: shouldEndGame,\n          turn: state.ctx.turn,\n          phase: state.ctx.phase,\n          automatic: true\n        });\n        continue;\n      } // Check if we should end the phase.\n\n\n      var shouldEndPhase = ShouldEndPhase(state);\n\n      if (shouldEndPhase) {\n        events.push({\n          fn: EndPhase,\n          arg: shouldEndPhase,\n          turn: state.ctx.turn,\n          phase: state.ctx.phase,\n          automatic: true\n        });\n        continue;\n      } // Check if we should end the turn.\n\n\n      if (fn === OnMove) {\n        var shouldEndTurn = ShouldEndTurn(state);\n\n        if (shouldEndTurn) {\n          events.push({\n            fn: EndTurn,\n            arg: shouldEndTurn,\n            turn: state.ctx.turn,\n            phase: state.ctx.phase,\n            automatic: true\n          });\n          continue;\n        }\n      }\n\n      events.push.apply(events, next);\n    }\n\n    return state;\n  } ///////////\n  // Start //\n  ///////////\n\n\n  function StartGame(state, _ref3) {\n    var next = _ref3.next;\n    next.push({\n      fn: StartPhase\n    });\n    return state;\n  }\n\n  function StartPhase(state, _ref4) {\n    var next = _ref4.next;\n    var G = state.G,\n        ctx = state.ctx;\n    var conf = GetPhase(ctx); // Allow plugins to modify G and ctx at the beginning of a phase.\n\n    G = plugin.G.onPhaseBegin(G, ctx, plugins);\n    ctx = plugin.ctx.onPhaseBegin(ctx, plugins); // Run any phase setup code provided by the user.\n\n    G = conf.onBegin(G, ctx);\n    next.push({\n      fn: StartTurn\n    });\n    return _objectSpread({}, state, {\n      G: G,\n      ctx: ctx\n    });\n  }\n\n  function StartTurn(state, _ref5) {\n    var currentPlayer = _ref5.currentPlayer;\n    var G = state.G,\n        ctx = state.ctx;\n    var conf = GetPhase(ctx); // Initialize the turn order state.\n\n    if (currentPlayer) {\n      ctx = _objectSpread({}, ctx, {\n        currentPlayer: currentPlayer\n      });\n\n      if (conf.turn.activePlayers) {\n        ctx = SetActivePlayers(ctx, conf.turn.activePlayers);\n      }\n    } else {\n      // This is only called at the beginning of the phase\n      // when there is no currentPlayer yet.\n      ctx = InitTurnOrderState(G, ctx, conf.turn);\n    }\n\n    G = conf.turn.onBegin(G, ctx);\n    var turn = ctx.turn + 1;\n    ctx = _objectSpread({}, ctx, {\n      turn: turn,\n      numMoves: 0,\n      _prevActivePlayers: []\n    });\n    var plainCtx = ContextEnhancer.detachAllFromContext(ctx);\n    var _undo = [{\n      G: G,\n      ctx: plainCtx\n    }];\n    return _objectSpread({}, state, {\n      G: G,\n      ctx: ctx,\n      _undo: _undo,\n      _redo: []\n    });\n  } ////////////\n  // Update //\n  ////////////\n\n\n  function UpdatePhase(state, _ref6) {\n    var arg = _ref6.arg,\n        next = _ref6.next,\n        phase = _ref6.phase;\n    var conf = GetPhase({\n      phase: phase\n    });\n    var _state = state,\n        ctx = _state.ctx;\n\n    if (arg && arg.next) {\n      if (arg.next in phaseMap) {\n        ctx = _objectSpread({}, ctx, {\n          phase: arg.next\n        });\n      } else {\n        logging.error('invalid phase: ' + arg.next);\n        return state;\n      }\n    } else if (conf.next !== undefined) {\n      ctx = _objectSpread({}, ctx, {\n        phase: conf.next\n      });\n    } else {\n      ctx = _objectSpread({}, ctx, {\n        phase: null\n      });\n    }\n\n    state = _objectSpread({}, state, {\n      ctx: ctx\n    }); // Start the new phase.\n\n    next.push({\n      fn: StartPhase\n    });\n    return state;\n  }\n\n  function UpdateTurn(state, _ref7) {\n    var arg = _ref7.arg,\n        currentPlayer = _ref7.currentPlayer,\n        next = _ref7.next;\n    var _state2 = state,\n        G = _state2.G,\n        ctx = _state2.ctx;\n    var conf = GetPhase(ctx); // Update turn order state.\n\n    var _UpdateTurnOrderState = UpdateTurnOrderState(G, _objectSpread({}, ctx, {\n      currentPlayer: currentPlayer\n    }), conf.turn, arg),\n        endPhase = _UpdateTurnOrderState.endPhase,\n        newCtx = _UpdateTurnOrderState.ctx;\n\n    ctx = newCtx;\n    state = _objectSpread({}, state, {\n      G: G,\n      ctx: ctx\n    });\n\n    if (endPhase) {\n      next.push({\n        fn: EndPhase,\n        turn: ctx.turn,\n        phase: ctx.phase\n      });\n    } else {\n      next.push({\n        fn: StartTurn,\n        currentPlayer: ctx.currentPlayer\n      });\n    }\n\n    return state;\n  }\n\n  function UpdateStage(state, _ref8) {\n    var arg = _ref8.arg,\n        playerID = _ref8.playerID;\n\n    if (typeof arg === 'string') {\n      arg = {\n        stage: arg\n      };\n    }\n\n    var ctx = state.ctx;\n    var _ctx = ctx,\n        activePlayers = _ctx.activePlayers,\n        _activePlayersMoveLimit = _ctx._activePlayersMoveLimit,\n        _activePlayersNumMoves = _ctx._activePlayersNumMoves;\n\n    if (arg.stage) {\n      if (activePlayers === null) {\n        activePlayers = {};\n      }\n\n      activePlayers[playerID] = arg.stage;\n      _activePlayersNumMoves[playerID] = 0;\n\n      if (arg.moveLimit) {\n        if (_activePlayersMoveLimit === null) {\n          _activePlayersMoveLimit = {};\n        }\n\n        _activePlayersMoveLimit[playerID] = arg.moveLimit;\n      }\n    }\n\n    ctx = _objectSpread({}, ctx, {\n      activePlayers: activePlayers,\n      _activePlayersMoveLimit: _activePlayersMoveLimit,\n      _activePlayersNumMoves: _activePlayersNumMoves\n    });\n    return _objectSpread({}, state, {\n      ctx: ctx\n    });\n  } ///////////////\n  // ShouldEnd //\n  ///////////////\n\n\n  function ShouldEndGame(_ref9) {\n    var G = _ref9.G,\n        ctx = _ref9.ctx;\n    return endIf(G, ctx);\n  }\n\n  function ShouldEndPhase(_ref10) {\n    var G = _ref10.G,\n        ctx = _ref10.ctx;\n    var conf = GetPhase(ctx);\n    return conf.endIf(G, ctx);\n  }\n\n  function ShouldEndTurn(_ref11) {\n    var G = _ref11.G,\n        ctx = _ref11.ctx;\n    var conf = GetPhase(ctx); // End the turn if the required number of moves has been made.\n\n    var currentPlayerMoves = ctx.numMoves || 0;\n\n    if (conf.turn.moveLimit && currentPlayerMoves >= conf.turn.moveLimit) {\n      return true;\n    }\n\n    return conf.turn.endIf(G, ctx);\n  } /////////\n  // End //\n  /////////\n\n\n  function EndGame(state, _ref12) {\n    var arg = _ref12.arg,\n        phase = _ref12.phase;\n    state = EndPhase(state, {\n      phase: phase\n    });\n\n    if (arg === undefined) {\n      arg = true;\n    }\n\n    return _objectSpread({}, state, {\n      ctx: _objectSpread({}, state.ctx, {\n        gameover: arg\n      })\n    });\n  }\n\n  function EndPhase(state, _ref13) {\n    var arg = _ref13.arg,\n        next = _ref13.next,\n        turn = _ref13.turn,\n        automatic = _ref13.automatic;\n    // End the turn first.\n    state = EndTurn(state, {\n      turn: turn,\n      force: true\n    });\n    var G = state.G;\n    var ctx = state.ctx;\n\n    if (next) {\n      next.push({\n        fn: UpdatePhase,\n        arg: arg,\n        phase: ctx.phase\n      });\n    } // If we aren't in a phase, there is nothing else to do.\n\n\n    if (ctx.phase === null) {\n      return state;\n    } // Run any cleanup code for the phase that is about to end.\n\n\n    var conf = GetPhase(ctx);\n    G = conf.onEnd(G, ctx); // Reset the phase.\n\n    ctx = _objectSpread({}, ctx, {\n      phase: null\n    }); // Add log entry.\n\n    var action = gameEvent('endPhase', arg);\n    var logEntry = {\n      action: action,\n      _stateID: state._stateID,\n      turn: state.ctx.turn,\n      phase: state.ctx.phase\n    };\n\n    if (automatic) {\n      logEntry.automatic = true;\n    }\n\n    var deltalog = [].concat(_toConsumableArray(state.deltalog), [logEntry]);\n    return _objectSpread({}, state, {\n      G: G,\n      ctx: ctx,\n      deltalog: deltalog\n    });\n  }\n\n  function EndTurn(state, _ref14) {\n    var arg = _ref14.arg,\n        next = _ref14.next,\n        turn = _ref14.turn,\n        force = _ref14.force,\n        automatic = _ref14.automatic;\n\n    // If we are not in a turn currently, do nothing.\n    if (state.ctx.currentPlayer === null) {\n      return state;\n    } // This is not the turn that EndTurn was originally\n    // called for. The turn was probably ended some other way.\n\n\n    if (turn !== state.ctx.turn) {\n      return state;\n    }\n\n    var G = state.G,\n        ctx = state.ctx;\n    var conf = GetPhase(ctx); // Prevent ending the turn if moveLimit haven't been made.\n\n    var currentPlayerMoves = ctx.numMoves || 0;\n\n    if (!force && conf.turn.moveLimit && currentPlayerMoves < conf.turn.moveLimit) {\n      return state;\n    } // Run turn-end triggers.\n\n\n    G = conf.turn.onEnd(G, ctx);\n\n    if (next) {\n      next.push({\n        fn: UpdateTurn,\n        arg: arg,\n        currentPlayer: ctx.currentPlayer\n      });\n    } // Reset currentPlayer and activePlayers.\n\n\n    ctx = _objectSpread({}, ctx, {\n      currentPlayer: null,\n      activePlayers: null\n    }); // Add log entry.\n\n    var action = gameEvent('endTurn', arg);\n    var logEntry = {\n      action: action,\n      _stateID: state._stateID,\n      turn: state.ctx.turn,\n      phase: state.ctx.phase\n    };\n\n    if (automatic) {\n      logEntry.automatic = true;\n    }\n\n    var deltalog = [].concat(_toConsumableArray(state.deltalog || []), [logEntry]);\n    return _objectSpread({}, state, {\n      G: G,\n      ctx: ctx,\n      deltalog: deltalog,\n      _undo: [],\n      _redo: []\n    });\n  }\n\n  function EndStage(state, _ref15) {\n    var arg = _ref15.arg,\n        next = _ref15.next,\n        automatic = _ref15.automatic,\n        playerID = _ref15.playerID;\n    playerID = playerID || state.ctx.currentPlayer;\n    var ctx = state.ctx;\n    var _ctx2 = ctx,\n        activePlayers = _ctx2.activePlayers,\n        _activePlayersMoveLimit = _ctx2._activePlayersMoveLimit;\n\n    if (next && arg) {\n      next.push({\n        fn: UpdateStage,\n        arg: arg,\n        playerID: playerID\n      });\n    } // If player isn’t in a stage, there is nothing else to do.\n\n\n    if (activePlayers === null || !(playerID in activePlayers)) {\n      return state;\n    } // Remove player from activePlayers.\n\n\n    activePlayers = Object.keys(activePlayers).filter(function (id) {\n      return id !== playerID;\n    }).reduce(function (obj, key) {\n      obj[key] = activePlayers[key];\n      return obj;\n    }, {});\n\n    if (_activePlayersMoveLimit) {\n      // Remove player from _activePlayersMoveLimit.\n      _activePlayersMoveLimit = Object.keys(_activePlayersMoveLimit).filter(function (id) {\n        return id !== playerID;\n      }).reduce(function (obj, key) {\n        obj[key] = _activePlayersMoveLimit[key];\n        return obj;\n      }, {});\n    }\n\n    ctx = UpdateActivePlayersOnceEmpty(_objectSpread({}, ctx, {\n      activePlayers: activePlayers,\n      _activePlayersMoveLimit: _activePlayersMoveLimit\n    })); // Add log entry.\n\n    var action = gameEvent('endStage', arg);\n    var logEntry = {\n      action: action,\n      _stateID: state._stateID,\n      turn: state.ctx.turn,\n      phase: state.ctx.phase\n    };\n\n    if (automatic) {\n      logEntry.automatic = true;\n    }\n\n    var deltalog = [].concat(_toConsumableArray(state.deltalog || []), [logEntry]);\n    return _objectSpread({}, state, {\n      ctx: ctx,\n      deltalog: deltalog\n    });\n  }\n  /**\n   * Retrieves the relevant move that can be played by playerID.\n   *\n   * If ctx.activePlayers is set (i.e. one or more players are in some stage),\n   * then it attempts to find the move inside the stages config for\n   * that turn. If the stage for a player is '', then the player is\n   * allowed to make a move (as determined by the phase config), but\n   * isn't restricted to a particular set as defined in the stage config.\n   *\n   * If not, it then looks for the move inside the phase.\n   *\n   * If it doesn't find the move there, it looks at the global move definition.\n   *\n   * @param {object} ctx\n   * @param {string} name\n   * @param {string} playerID\n   */\n\n\n  function GetMove(ctx, name, playerID) {\n    var conf = GetPhase(ctx);\n    var stages = conf.turn.stages;\n    var activePlayers = ctx.activePlayers;\n\n    if (activePlayers && activePlayers[playerID] !== undefined && activePlayers[playerID] !== Stage.NULL && stages[activePlayers[playerID]] !== undefined && stages[activePlayers[playerID]].moves !== undefined) {\n      // Check if moves are defined for the player's stage.\n      var _stage = stages[activePlayers[playerID]];\n      var _moves2 = _stage.moves;\n\n      if (name in _moves2) {\n        return _moves2[name];\n      }\n    } else if (conf.moves) {\n      // Check if moves are defined for the current phase.\n      if (name in conf.moves) {\n        return conf.moves[name];\n      }\n    } else if (name in moves) {\n      // Check for the move globally.\n      return moves[name];\n    }\n\n    return null;\n  }\n\n  function ProcessMove(state, action) {\n    var conf = GetPhase(state.ctx);\n    var _state3 = state,\n        ctx = _state3.ctx;\n    var _activePlayersNumMoves = ctx._activePlayersNumMoves;\n    var playerID = action.playerID;\n    if (ctx.activePlayers) _activePlayersNumMoves[playerID]++;\n    var numMoves = state.ctx.numMoves;\n\n    if (playerID == state.ctx.currentPlayer) {\n      numMoves++;\n    }\n\n    state = _objectSpread({}, state, {\n      ctx: _objectSpread({}, ctx, {\n        numMoves: numMoves,\n        _activePlayersNumMoves: _activePlayersNumMoves\n      })\n    });\n\n    if (ctx._activePlayersMoveLimit && _activePlayersNumMoves[playerID] >= ctx._activePlayersMoveLimit[playerID]) {\n      state = EndStage(state, {\n        playerID: playerID,\n        automatic: true\n      });\n    }\n\n    var G = conf.turn.onMove(state.G, state.ctx, action);\n    state = _objectSpread({}, state, {\n      G: G\n    }); // Update undo / redo state.\n\n    var undo = state._undo || [];\n    var moveType = action.type;\n    var plainCtx = ContextEnhancer.detachAllFromContext(state.ctx);\n    state = _objectSpread({}, state, {\n      _undo: [].concat(_toConsumableArray(undo), [{\n        G: state.G,\n        ctx: plainCtx,\n        moveType: moveType\n      }]),\n      _redo: []\n    });\n    var events = [{\n      fn: OnMove\n    }];\n    return ProcessEvents(state, events);\n  }\n\n  function SetStageEvent(state, arg) {\n    return ProcessEvents(state, [{\n      fn: EndStage,\n      arg: arg\n    }]);\n  }\n\n  function EndStageEvent(state) {\n    return ProcessEvents(state, [{\n      fn: EndStage\n    }]);\n  }\n\n  function SetPhaseEvent(state, newPhase) {\n    return ProcessEvents(state, [{\n      fn: EndPhase,\n      phase: state.ctx.phase,\n      turn: state.ctx.turn,\n      arg: {\n        next: newPhase\n      }\n    }]);\n  }\n\n  function EndPhaseEvent(state) {\n    return ProcessEvents(state, [{\n      fn: EndPhase,\n      phase: state.ctx.phase,\n      turn: state.ctx.turn\n    }]);\n  }\n\n  function EndTurnEvent(state, arg) {\n    return ProcessEvents(state, [{\n      fn: EndTurn,\n      turn: state.ctx.turn,\n      phase: state.ctx.phase,\n      arg: arg\n    }]);\n  }\n\n  function EndGameEvent(state, arg) {\n    return ProcessEvents(state, [{\n      fn: EndGame,\n      turn: state.ctx.turn,\n      phase: state.ctx.phase,\n      arg: arg\n    }]);\n  }\n\n  var eventHandlers = {\n    endStage: EndStageEvent,\n    setStage: SetStageEvent,\n    endTurn: EndTurnEvent,\n    endPhase: EndPhaseEvent,\n    setPhase: SetPhaseEvent,\n    endGame: EndGameEvent,\n    setActivePlayers: SetActivePlayersEvent\n  };\n  var enabledEvents = {};\n\n  if (events.endTurn) {\n    enabledEvents['endTurn'] = true;\n  }\n\n  if (events.endPhase) {\n    enabledEvents['endPhase'] = true;\n    enabledEvents['setPhase'] = true;\n  }\n\n  if (events.endGame) {\n    enabledEvents['endGame'] = true;\n  }\n\n  if (events.setActivePlayers) {\n    enabledEvents['setActivePlayers'] = true;\n  }\n\n  if (events.endStage) {\n    enabledEvents['endStage'] = true;\n    enabledEvents['setStage'] = true;\n  }\n\n  return FlowInternal({\n    ctx: function ctx(numPlayers) {\n      return {\n        numPlayers: numPlayers,\n        turn: 0,\n        currentPlayer: '0',\n        playOrder: _toConsumableArray(new Array(numPlayers)).map(function (d, i) {\n          return i + '';\n        }),\n        playOrderPos: 0,\n        phase: startingPhase,\n        activePlayers: null\n      };\n    },\n    init: function init(state) {\n      return ProcessEvents(state, [{\n        fn: StartGame\n      }]);\n    },\n    eventHandlers: eventHandlers,\n    enabledEvents: enabledEvents,\n    moveMap: moveMap,\n    moveNames: _toConsumableArray(moveNames.values()),\n    processMove: ProcessMove,\n    getMove: GetMove\n  });\n}","import _toConsumableArray from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n/*\n * Copyright 2017 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport { FnWrap } from '../plugins/main';\nimport { Flow } from './flow';\n/**\n * Game\n *\n * Helper to generate the game move reducer. The returned\n * reducer has the following signature:\n *\n * (G, action, ctx) => {}\n *\n * You can roll your own if you like, or use any Redux\n * addon to generate such a reducer.\n *\n * The convention used in this framework is to\n * have action.type contain the name of the move, and\n * action.args contain any additional arguments as an\n * Array.\n *\n * ({\n *   name: 'tic-tac-toe',\n *\n *   setup: (numPlayers) => {\n *     const G = {...};\n *     return G;\n *   },\n *\n *   plugins: [plugin1, plugin2, ...],\n *\n *   moves: {\n *     'moveWithoutArgs': (G, ctx) => {\n *       return Object.assign({}, G, ...);\n *     },\n *     'moveWithArgs': (G, ctx, arg0, arg1) => {\n *       return Object.assign({}, G, ...);\n *     }\n *   },\n *\n *   playerView: (G, ctx, playerID) => { ... },\n *\n *   flow: {\n *     endIf: (G, ctx) => { ... },\n *\n *     phases: {\n *       A: { onBegin: (G, ctx) => G, onEnd: (G, ctx) => G },\n *       B: { onBegin: (G, ctx) => G, onEnd: (G, ctx) => G },\n *       ...\n *     }\n *   },\n * })\n *\n * @param {...object} setup - Function that returns the initial state of G.\n *\n * @param {...object} moves - A dictionary of move functions.\n *\n * @param {...object} playerView - A function that returns a\n *                                 derivative of G tailored for\n *                                 the specified player.\n *\n * @param {...object} flow - Customize the flow of the game (see flow.js).\n *\n * @param {...object} seed - Seed for the PRNG.\n *\n * @param {Array} plugins - List of plugins. Each plugin is an object like the following:\n *                          {\n *                            // Optional: Wraps a move / trigger function and returns\n *                            // the wrapped function. The wrapper can do anything\n *                            // it wants, but will typically be used to customize G.\n *                            fnWrap: (fn) => {\n *                              return (G, ctx, ...args) => {\n *                                G = preprocess(G);\n *                                G = fn(G, ctx, ...args);\n *                                G = postprocess(G);\n *                                return G;\n *                              };\n *                            },\n *\n *                            // Optional: Called during setup. Can be used to\n *                            // augment G with additional state during setup.\n *                            setup: (G, ctx) => G,\n *                          }\n */\n\nexport function Game(game) {\n  // The Game() function has already been called on this\n  // config object, so just pass it through.\n  if (game.processMove !== undefined) {\n    return game;\n  }\n\n  if (game.name === undefined) game.name = 'default';\n  if (game.setup === undefined) game.setup = function () {\n    return {};\n  };\n  if (game.moves === undefined) game.moves = {};\n  if (game.playerView === undefined) game.playerView = function (G) {\n    return G;\n  };\n  if (game.plugins === undefined) game.plugins = [];\n\n  if (!game.flow || game.flow.processGameEvent === undefined) {\n    game.flow = Flow(game);\n  }\n\n  return _objectSpread({}, game, {\n    moveNames: game.flow.moveNames,\n    processMove: function processMove(G, action, ctx) {\n      var moveFn = game.flow.getMove(ctx, action.type, action.playerID);\n\n      if (moveFn instanceof Object && moveFn.move) {\n        moveFn = moveFn.move;\n      }\n\n      if (moveFn instanceof Function) {\n        var ctxWithPlayerID = _objectSpread({}, ctx, {\n          playerID: action.playerID\n        });\n\n        var args = [G, ctxWithPlayerID].concat(action.args);\n        var fn = FnWrap(moveFn, game.plugins);\n        return fn.apply(void 0, _toConsumableArray(args));\n      }\n\n      return G;\n    }\n  });\n}","import _classCallCheck from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*\n * Copyright 2017 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport * as ActionCreators from '../../core/action-creators';\nimport io from 'socket.io-client';\n/**\n * SocketIO\n *\n * Transport interface that interacts with the Master via socket.io.\n */\n\nexport var SocketIO =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new Mutiplayer instance.\n   * @param {object} socket - Override for unit tests.\n   * @param {object} socketOpts - Options to pass to socket.io.\n   * @param {string} gameID - The game ID to connect to.\n   * @param {string} playerID - The player ID associated with this client.\n   * @param {string} gameName - The game type (the `name` field in `Game`).\n   * @param {string} numPlayers - The number of players.\n   * @param {string} server - The game server in the form of 'hostname:port'. Defaults to the server serving the client if not provided.\n   */\n  function SocketIO() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        socket = _ref.socket,\n        socketOpts = _ref.socketOpts,\n        store = _ref.store,\n        gameID = _ref.gameID,\n        playerID = _ref.playerID,\n        gameName = _ref.gameName,\n        numPlayers = _ref.numPlayers,\n        server = _ref.server;\n\n    _classCallCheck(this, SocketIO);\n\n    this.server = server;\n    this.socket = socket;\n    this.store = store;\n    this.socketOpts = socketOpts;\n    this.gameName = gameName || 'default';\n    this.gameID = gameID || 'default';\n    this.playerID = playerID || null;\n    this.numPlayers = numPlayers || 2;\n    this.gameID = this.gameName + ':' + this.gameID;\n    this.isConnected = false;\n\n    this.callback = function () {};\n\n    this.gameMetadataCallback = function () {};\n  }\n  /**\n   * Called when an action that has to be relayed to the\n   * game master is made.\n   */\n\n\n  _createClass(SocketIO, [{\n    key: \"onAction\",\n    value: function onAction(state, action) {\n      this.socket.emit('update', action, state._stateID, this.gameID, this.playerID);\n    }\n    /**\n     * Connect to the server.\n     */\n\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      var _this = this;\n\n      if (!this.socket) {\n        if (this.server) {\n          var server = this.server;\n\n          if (server.search(/^https?:\\/\\//) == -1) {\n            server = 'http://' + this.server;\n          }\n\n          if (server.substr(-1) != '/') {\n            // add trailing slash if not already present\n            server = server + '/';\n          }\n\n          this.socket = io(server + this.gameName, this.socketOpts);\n        } else {\n          this.socket = io('/' + this.gameName, this.socketOpts);\n        }\n      } // Called when another player makes a move and the\n      // master broadcasts the update to other clients (including\n      // this one).\n\n\n      this.socket.on('update', function (gameID, state, deltalog) {\n        var currentState = _this.store.getState();\n\n        if (gameID == _this.gameID && state._stateID >= currentState._stateID) {\n          var action = ActionCreators.update(state, deltalog);\n\n          _this.store.dispatch(action);\n        }\n      }); // Called when the client first connects to the master\n      // and requests the current game state.\n\n      this.socket.on('sync', function (gameID, state, log, gameMetadata) {\n        if (gameID == _this.gameID) {\n          var action = ActionCreators.sync(state, log);\n\n          _this.gameMetadataCallback(gameMetadata);\n\n          _this.store.dispatch(action);\n        }\n      }); // Initial sync to get game state.\n\n      this.socket.emit('sync', this.gameID, this.playerID, this.numPlayers); // Keep track of connection status.\n\n      this.socket.on('connect', function () {\n        _this.isConnected = true;\n\n        _this.callback();\n      });\n      this.socket.on('disconnect', function () {\n        _this.isConnected = false;\n\n        _this.callback();\n      });\n    }\n    /**\n     * Subscribe to connection state changes.\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(fn) {\n      this.callback = fn;\n    }\n  }, {\n    key: \"subscribeGameMetadata\",\n    value: function subscribeGameMetadata(fn) {\n      this.gameMetadataCallback = fn;\n    }\n    /**\n     * Updates the game id.\n     * @param {string} id - The new game id.\n     */\n\n  }, {\n    key: \"updateGameID\",\n    value: function updateGameID(id) {\n      this.gameID = this.gameName + ':' + id;\n      var action = ActionCreators.reset(null);\n      this.store.dispatch(action);\n\n      if (this.socket) {\n        this.socket.emit('sync', this.gameID, this.playerID, this.numPlayers);\n      }\n    }\n    /**\n     * Updates the player associated with this client.\n     * @param {string} id - The new player id.\n     */\n\n  }, {\n    key: \"updatePlayerID\",\n    value: function updatePlayerID(id) {\n      this.playerID = id;\n      var action = ActionCreators.reset(null);\n      this.store.dispatch(action);\n\n      if (this.socket) {\n        this.socket.emit('sync', this.gameID, this.playerID, this.numPlayers);\n      }\n    }\n  }]);\n\n  return SocketIO;\n}();","import _toConsumableArray from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*\n * Copyright 2017 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\n\n/**\n * InMemory data storage.\n */\nexport var InMemory =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new InMemory storage.\n   */\n  function InMemory() {\n    _classCallCheck(this, InMemory);\n\n    this.games = new Map();\n  }\n  /**\n   * Connect.\n   * No-op for the InMemory instance.\n   */\n\n\n  _createClass(InMemory, [{\n    key: \"connect\",\n    value: function connect() {\n      return;\n    }\n    /**\n     * Write the game state to the in-memory object.\n     * @param {string} id - The game id.\n     * @param {object} store - A game state to persist.\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(id, state) {\n      return this.games.set(id, state);\n    }\n    /**\n     * Read the game state from the in-memory object.\n     * @param {string} id - The game id.\n     * @returns {object} - A game state, or undefined\n     *                     if no game is found with this id.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.games.get(id);\n    }\n    /**\n     * Check if a particular game id exists.\n     * @param {string} id - The game id.\n     * @returns {boolean} - True if a game with this id exists.\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(id) {\n      return this.games.has(id);\n    }\n    /**\n     * Remove the game state from the in-memory object.\n     * @param {string} id - The game id.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(id) {\n      if (!this.games.has(id)) return;\n      this.games.delete(id);\n    }\n    /**\n     * Return all keys.\n     * @returns {array} - Array of keys (strings)\n     */\n\n  }, {\n    key: \"list\",\n    value: function list() {\n      return _toConsumableArray(this.games.keys());\n    }\n  }]);\n\n  return InMemory;\n}();","import { parse, stringify } from 'flatted';\nimport { Random } from './random';\nimport { Game } from './game';\nimport * as plugins from '../plugins/main';\nimport { ContextEnhancer } from './context-enhancer';\n/**\n * InitializeGame\n *\n * Creates the initial game state.\n *\n * @param {...object} game - Return value of Game().\n * @param {...object} numPlayers - The number of players.\n * @param {...object} multiplayer - Set to true if we are in a multiplayer client.\n */\n\nexport function InitializeGame(_ref) {\n  var game = _ref.game,\n      numPlayers = _ref.numPlayers,\n      setupData = _ref.setupData;\n  game = Game(game);\n\n  if (!numPlayers) {\n    numPlayers = 2;\n  }\n\n  var ctx = game.flow.ctx(numPlayers);\n  var seed = game.seed;\n\n  if (seed === undefined) {\n    seed = Random.seed();\n  }\n\n  ctx._random = {\n    seed: seed\n  }; // Pass ctx through all the plugins that want to modify it.\n\n  ctx = plugins.ctx.setup(ctx, game); // Augment ctx with the enhancers (TODO: move these into plugins).\n\n  var apiCtx = new ContextEnhancer(ctx, game, ctx.currentPlayer);\n  var ctxWithAPI = apiCtx.attachToContext(ctx);\n  var initialG = game.setup(ctxWithAPI, setupData); // Pass G through all the plugins that want to modify it.\n\n  initialG = plugins.G.setup(initialG, ctxWithAPI, game);\n  var initial = {\n    // User managed state.\n    G: initialG,\n    // Framework managed state.\n    ctx: ctx,\n    // List of {G, ctx} pairs that can be undone.\n    _undo: [],\n    // List of {G, ctx} pairs that can be redone.\n    _redo: [],\n    // A monotonically non-decreasing ID to ensure that\n    // state updates are only allowed from clients that\n    // are at the same version that the server.\n    _stateID: 0,\n    // A snapshot of this object so that actions can be\n    // replayed over it to view old snapshots.\n    // TODO: This will no longer be necessary once the\n    // log stops replaying actions (but reads the actual\n    // game states instead).\n    _initial: {}\n  };\n  var state = game.flow.init({\n    G: initial.G,\n    ctx: ctxWithAPI\n  });\n  initial.G = state.G;\n  initial._undo = state._undo;\n  state = apiCtx.updateAndDetach(state, true);\n  initial.ctx = state.ctx;\n\n  var deepCopy = function deepCopy(obj) {\n    return parse(stringify(obj));\n  };\n\n  initial._initial = deepCopy(initial);\n  return initial;\n}","import _toConsumableArray from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n/*\n * Copyright 2017 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport * as Actions from './action-types';\nimport { Game } from './game';\nimport { error } from './logger';\nimport { ContextEnhancer } from './context-enhancer';\n/**\n * Returns true if a move can be undone.\n */\n\nvar CanUndoMove = function CanUndoMove(G, ctx, move) {\n  if (move.undoable === false) {\n    return false;\n  }\n\n  if (move.undoable instanceof Function) {\n    return move.undoable(G, ctx);\n  }\n\n  return true;\n};\n/**\n * Moves can return this when they want to indicate\n * that the combination of arguments is illegal and\n * the move ought to be discarded.\n */\n\n\nexport var INVALID_MOVE = 'INVALID_MOVE';\n/**\n * CreateGameReducer\n *\n * Creates the main game state reducer.\n * @param {...object} game - Return value of Game().\n * @param {...object} numPlayers - The number of players.\n * @param {...object} multiplayer - Set to true if we are in a multiplayer client.\n */\n\nexport function CreateGameReducer(_ref) {\n  var game = _ref.game,\n      multiplayer = _ref.multiplayer;\n  game = Game(game);\n  /**\n   * GameReducer\n   *\n   * Redux reducer that maintains the overall game state.\n   * @param {object} state - The state before the action.\n   * @param {object} action - A Redux action.\n   */\n\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    switch (action.type) {\n      case Actions.GAME_EVENT:\n        {\n          state = _objectSpread({}, state, {\n            deltalog: []\n          }); // Process game events only on the server.\n          // These events like `endTurn` typically\n          // contain code that may rely on secret state\n          // and cannot be computed on the client.\n\n          if (multiplayer) {\n            return state;\n          } // Ignore the event if the player isn't allowed to make it.\n\n\n          if (action.payload.playerID !== null && action.payload.playerID !== undefined && !game.flow.canPlayerCallEvent(state.G, state.ctx, action.payload.playerID)) {\n            return state;\n          }\n\n          var apiCtx = new ContextEnhancer(state.ctx, game, action.payload.playerID);\n          state.ctx = apiCtx.attachToContext(state.ctx);\n          var newState = game.flow.processGameEvent(state, action);\n          newState = apiCtx.updateAndDetach(newState, true);\n          return _objectSpread({}, newState, {\n            _stateID: state._stateID + 1\n          });\n        }\n\n      case Actions.MAKE_MOVE:\n        {\n          state = _objectSpread({}, state, {\n            deltalog: []\n          }); // Check whether the move is allowed at this time.\n\n          var move = game.flow.getMove(state.ctx, action.payload.type, action.payload.playerID || state.ctx.currentPlayer);\n\n          if (move === null) {\n            error(\"disallowed move: \".concat(action.payload.type));\n            return state;\n          } // Don't run move on client if optimistic = false.\n\n\n          if (multiplayer && move.optimistic === false) {\n            return state;\n          } // Disallow moves once the game is over.\n\n\n          if (state.ctx.gameover !== undefined) {\n            error(\"cannot make move after game end\");\n            return state;\n          } // Ignore the move if the player isn't allowed to make it.\n\n\n          if (action.payload.playerID !== null && action.payload.playerID !== undefined && !game.flow.canPlayerMakeMove(state.G, state.ctx, action)) {\n            error(\"disallowed move: \".concat(action.payload.type));\n            return state;\n          }\n\n          var _apiCtx = new ContextEnhancer(state.ctx, game, action.payload.playerID);\n\n          var ctxWithAPI = _apiCtx.attachToContext(state.ctx); // Process the move.\n\n\n          var G = game.processMove(state.G, action.payload, ctxWithAPI); // The game declared the move as invalid.\n\n          if (G === INVALID_MOVE) {\n            return state;\n          } // Create a log entry for this move.\n\n\n          var logEntry = {\n            action: action,\n            _stateID: state._stateID,\n            turn: state.ctx.turn,\n            phase: state.ctx.phase\n          };\n\n          if (move.redact === true) {\n            logEntry.redact = true;\n          } // Don't call into events here.\n\n\n          var _newState = _apiCtx.updateAndDetach(_objectSpread({}, state, {\n            deltalog: [logEntry]\n          }), false);\n\n          var ctx = _newState.ctx; // Random API code was executed. If we are on the\n          // client, wait for the master response instead.\n\n          if (multiplayer && ctx._random !== undefined && ctx._random.prngstate !== undefined) {\n            return state;\n          }\n\n          state = _objectSpread({}, _newState, {\n            G: G,\n            ctx: ctx,\n            _stateID: state._stateID + 1\n          }); // If we're on the client, just process the move\n          // and no triggers in multiplayer mode.\n          // These will be processed on the server, which\n          // will send back a state update.\n\n          if (multiplayer) {\n            return state;\n          } // Allow the flow reducer to process any triggers that happen after moves.\n\n\n          ctxWithAPI = _apiCtx.attachToContext(state.ctx);\n          state = game.flow.processMove(_objectSpread({}, state, {\n            ctx: ctxWithAPI\n          }), action.payload);\n          state = _apiCtx.updateAndDetach(state, true);\n          return state;\n        }\n\n      case Actions.RESET:\n      case Actions.UPDATE:\n      case Actions.SYNC:\n        {\n          return action.state;\n        }\n\n      case Actions.UNDO:\n        {\n          var _state = state,\n              _undo = _state._undo,\n              _redo = _state._redo;\n\n          if (_undo.length < 2) {\n            return state;\n          }\n\n          var last = _undo[_undo.length - 1];\n          var restore = _undo[_undo.length - 2]; // Only allow undoable moves to be undone.\n\n          var lastMove = game.flow.getMove(state.ctx, last.moveType, state.ctx.currentPlayer);\n\n          if (!CanUndoMove(state.G, state.ctx, lastMove)) {\n            return state;\n          }\n\n          return _objectSpread({}, state, {\n            G: restore.G,\n            ctx: restore.ctx,\n            _undo: _undo.slice(0, _undo.length - 1),\n            _redo: [last].concat(_toConsumableArray(_redo))\n          });\n        }\n\n      case Actions.REDO:\n        {\n          var _state2 = state,\n              _undo2 = _state2._undo,\n              _redo2 = _state2._redo;\n\n          if (_redo2.length == 0) {\n            return state;\n          }\n\n          var first = _redo2[0];\n          return _objectSpread({}, state, {\n            G: first.G,\n            ctx: first.ctx,\n            _undo: [].concat(_toConsumableArray(_undo2), [first]),\n            _redo: _redo2.slice(1)\n          });\n        }\n\n      default:\n        {\n          return state;\n        }\n    }\n  };\n}","import _regeneratorRuntime from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _objectWithoutProperties from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n/*\n * Copyright 2018 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport { InitializeGame } from '../core/initialize';\nimport { CreateGameReducer } from '../core/reducer';\nimport { Game } from '../core/game';\nimport { UNDO, REDO, MAKE_MOVE, GAME_EVENT } from '../core/action-types';\nimport { createStore } from 'redux';\nimport * as logging from '../core/logger';\n\nvar GameMetadataKey = function GameMetadataKey(gameID) {\n  return \"\".concat(gameID, \":metadata\");\n};\n/**\n * Redact the log.\n *\n * @param {Array} log - The game log (or deltalog).\n * @param {String} playerID - The playerID that this log is\n *                            to be sent to.\n */\n\n\nexport function redactLog(log, playerID) {\n  if (log === undefined) {\n    return log;\n  }\n\n  return log.map(function (logEvent) {\n    // filter for all other players and spectators.\n    if (playerID !== null && +playerID === +logEvent.action.payload.playerID) {\n      return logEvent;\n    }\n\n    if (logEvent.redact !== true) {\n      return logEvent;\n    }\n\n    var payload = _objectSpread({}, logEvent.action.payload, {\n      args: null\n    });\n\n    var filteredEvent = _objectSpread({}, logEvent, {\n      action: _objectSpread({}, logEvent.action, {\n        payload: payload\n      })\n    });\n    /* eslint-disable-next-line no-unused-vars */\n\n\n    var redact = filteredEvent.redact,\n        remaining = _objectWithoutProperties(filteredEvent, [\"redact\"]);\n\n    return remaining;\n  });\n}\n/**\n * Verifies that the move came from a player with the\n * appropriate credentials.\n */\n\nexport var isActionFromAuthenticPlayer = function isActionFromAuthenticPlayer(_ref) {\n  var action = _ref.action,\n      gameMetadata = _ref.gameMetadata,\n      playerID = _ref.playerID;\n\n  if (!gameMetadata) {\n    return true;\n  }\n\n  var hasCredentials = Object.keys(gameMetadata.players).some(function (key) {\n    return !!(gameMetadata.players[key] && gameMetadata.players[key].credentials);\n  });\n\n  if (!hasCredentials) {\n    return true;\n  }\n\n  if (!action.payload) {\n    return false;\n  }\n\n  if (!action.payload.credentials) {\n    return false;\n  }\n\n  if (action.payload.credentials !== gameMetadata.players[playerID].credentials) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Master\n *\n * Class that runs the game and maintains the authoritative state.\n * It uses the transportAPI to communicate with clients and the\n * storageAPI to communicate with the database.\n */\n\nexport var Master =\n/*#__PURE__*/\nfunction () {\n  function Master(game, storageAPI, transportAPI, auth) {\n    _classCallCheck(this, Master);\n\n    this.game = Game(game);\n    this.storageAPI = storageAPI;\n    this.transportAPI = transportAPI;\n\n    this.auth = function () {\n      return true;\n    };\n\n    if (auth === true) {\n      this.auth = isActionFromAuthenticPlayer;\n    } else if (typeof auth === 'function') {\n      this.auth = auth;\n    }\n  }\n  /**\n   * Called on each move / event made by the client.\n   * Computes the new value of the game state and returns it\n   * along with a deltalog.\n   */\n\n\n  _createClass(Master, [{\n    key: \"onUpdate\",\n    value: function () {\n      var _onUpdate = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(action, stateID, gameID, playerID) {\n        var _this = this;\n\n        var isActionAuthentic, gameMetadata, _gameMetadata, key, state, reducer, store, log, stateWithLog;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.executeSynchronously) {\n                  _context.next = 5;\n                  break;\n                }\n\n                gameMetadata = this.storageAPI.get(GameMetadataKey(gameID));\n                isActionAuthentic = this.auth({\n                  action: action,\n                  gameMetadata: gameMetadata,\n                  gameID: gameID,\n                  playerID: playerID\n                });\n                _context.next = 9;\n                break;\n\n              case 5:\n                _context.next = 7;\n                return this.storageAPI.get(GameMetadataKey(gameID));\n\n              case 7:\n                _gameMetadata = _context.sent;\n                isActionAuthentic = this.auth({\n                  action: action,\n                  gameMetadata: _gameMetadata,\n                  gameID: gameID,\n                  playerID: playerID\n                });\n\n              case 9:\n                if (isActionAuthentic) {\n                  _context.next = 11;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", {\n                  error: 'unauthorized action'\n                });\n\n              case 11:\n                key = gameID;\n\n                if (!this.executeSynchronously) {\n                  _context.next = 16;\n                  break;\n                }\n\n                state = this.storageAPI.get(key);\n                _context.next = 19;\n                break;\n\n              case 16:\n                _context.next = 18;\n                return this.storageAPI.get(key);\n\n              case 18:\n                state = _context.sent;\n\n              case 19:\n                if (!(state === undefined)) {\n                  _context.next = 22;\n                  break;\n                }\n\n                logging.error(\"game not found, gameID=[\".concat(key, \"]\"));\n                return _context.abrupt(\"return\", {\n                  error: 'game not found'\n                });\n\n              case 22:\n                reducer = CreateGameReducer({\n                  game: this.game,\n                  numPlayers: state.ctx.numPlayers\n                });\n                store = createStore(reducer, state); // Only allow UNDO / REDO if there is exactly one player\n                // that can make moves right now and the person doing the\n                // action is that player.\n\n                if (!(action.type == UNDO || action.type == REDO)) {\n                  _context.next = 28;\n                  break;\n                }\n\n                if (!(state.ctx.currentPlayer !== playerID || state.ctx.activePlayers !== null)) {\n                  _context.next = 28;\n                  break;\n                }\n\n                logging.error(\"playerID=[\".concat(playerID, \"] cannot undo / redo right now\"));\n                return _context.abrupt(\"return\");\n\n              case 28:\n                if (!(action.type == MAKE_MOVE && !this.game.flow.canPlayerMakeMove(state.G, state.ctx, action))) {\n                  _context.next = 31;\n                  break;\n                }\n\n                logging.error(\"move not processed - canPlayerMakeMove=false, playerID=[\".concat(playerID, \"]\"));\n                return _context.abrupt(\"return\");\n\n              case 31:\n                if (!(action.type == GAME_EVENT && !this.game.flow.canPlayerCallEvent(state.G, state.ctx, playerID))) {\n                  _context.next = 34;\n                  break;\n                }\n\n                logging.error(\"event not processed - invalid playerID=[\".concat(playerID, \"]\"));\n                return _context.abrupt(\"return\");\n\n              case 34:\n                if (!(state._stateID !== stateID)) {\n                  _context.next = 37;\n                  break;\n                }\n\n                logging.error(\"invalid stateID, was=[\".concat(stateID, \"], expected=[\").concat(state._stateID, \"]\"));\n                return _context.abrupt(\"return\");\n\n              case 37:\n                log = store.getState().log || []; // Update server's version of the store.\n\n                store.dispatch(action);\n                state = store.getState();\n                this.transportAPI.sendAll(function (playerID) {\n                  var filteredState = _objectSpread({}, state, {\n                    G: _this.game.playerView(state.G, state.ctx, playerID),\n                    ctx: _objectSpread({}, state.ctx, {\n                      _random: undefined\n                    }),\n                    log: undefined,\n                    deltalog: undefined,\n                    _undo: [],\n                    _redo: [],\n                    _initial: _objectSpread({}, state._initial, {\n                      _undo: [],\n                      _redo: []\n                    })\n                  });\n\n                  var log = redactLog(state.deltalog, playerID);\n                  return {\n                    type: 'update',\n                    args: [gameID, filteredState, log]\n                  };\n                }); // TODO: We currently attach the log back into the state\n                // object before storing it, but this should probably\n                // sit in a different part of the database eventually.\n\n                log = [].concat(_toConsumableArray(log), _toConsumableArray(state.deltalog));\n                stateWithLog = _objectSpread({}, state, {\n                  log: log\n                });\n\n                if (!this.executeSynchronously) {\n                  _context.next = 47;\n                  break;\n                }\n\n                this.storageAPI.set(key, stateWithLog);\n                _context.next = 49;\n                break;\n\n              case 47:\n                _context.next = 49;\n                return this.storageAPI.set(key, stateWithLog);\n\n              case 49:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onUpdate(_x, _x2, _x3, _x4) {\n        return _onUpdate.apply(this, arguments);\n      }\n\n      return onUpdate;\n    }()\n    /**\n     * Called when the client connects / reconnects.\n     * Returns the latest game state and the entire log.\n     */\n\n  }, {\n    key: \"onSync\",\n    value: function () {\n      var _onSync = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(gameID, playerID, numPlayers) {\n        var key, state, gameMetadata, filteredGameMetadata, filteredState, log;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                key = gameID;\n\n                if (!this.executeSynchronously) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                state = this.storageAPI.get(key);\n                gameMetadata = this.storageAPI.get(GameMetadataKey(gameID));\n                _context2.next = 12;\n                break;\n\n              case 6:\n                _context2.next = 8;\n                return this.storageAPI.get(key);\n\n              case 8:\n                state = _context2.sent;\n                _context2.next = 11;\n                return this.storageAPI.get(GameMetadataKey(gameID));\n\n              case 11:\n                gameMetadata = _context2.sent;\n\n              case 12:\n                if (gameMetadata) {\n                  filteredGameMetadata = Object.values(gameMetadata.players).map(function (player) {\n                    return {\n                      id: player.id,\n                      name: player.name\n                    };\n                  });\n                } // If the game doesn't exist, then create one on demand.\n                // TODO: Move this out of the sync call.\n\n\n                if (!(state === undefined)) {\n                  _context2.next = 25;\n                  break;\n                }\n\n                state = InitializeGame({\n                  game: this.game,\n                  numPlayers: numPlayers\n                });\n\n                if (!this.executeSynchronously) {\n                  _context2.next = 20;\n                  break;\n                }\n\n                this.storageAPI.set(key, state);\n                state = this.storageAPI.get(key);\n                _context2.next = 25;\n                break;\n\n              case 20:\n                _context2.next = 22;\n                return this.storageAPI.set(key, state);\n\n              case 22:\n                _context2.next = 24;\n                return this.storageAPI.get(key);\n\n              case 24:\n                state = _context2.sent;\n\n              case 25:\n                filteredState = _objectSpread({}, state, {\n                  G: this.game.playerView(state.G, state.ctx, playerID),\n                  ctx: _objectSpread({}, state.ctx, {\n                    _random: undefined\n                  }),\n                  log: undefined,\n                  deltalog: undefined,\n                  _undo: [],\n                  _redo: [],\n                  _initial: _objectSpread({}, state._initial, {\n                    _undo: [],\n                    _redo: []\n                  })\n                });\n                log = redactLog(state.log, playerID);\n                this.transportAPI.send({\n                  playerID: playerID,\n                  type: 'sync',\n                  args: [gameID, filteredState, log, filteredGameMetadata]\n                });\n                return _context2.abrupt(\"return\");\n\n              case 29:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function onSync(_x5, _x6, _x7) {\n        return _onSync.apply(this, arguments);\n      }\n\n      return onSync;\n    }()\n  }]);\n\n  return Master;\n}();","import _classCallCheck from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _toConsumableArray from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/*\n * Copyright 2018 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport * as ActionCreators from '../../core/action-creators';\nimport { InMemory } from '../../server/db/inmemory';\nimport { Master } from '../../master/master';\n/**\n * Creates a local version of the master that the client\n * can interact with.\n */\n\nexport function LocalMaster(game) {\n  var clientCallbacks = {};\n\n  var send = function send(_ref) {\n    var type = _ref.type,\n        playerID = _ref.playerID,\n        args = _ref.args;\n    var callback = clientCallbacks[playerID];\n\n    if (callback !== undefined) {\n      callback.apply(null, [type].concat(_toConsumableArray(args)));\n    }\n  };\n\n  var sendAll = function sendAll(arg) {\n    for (var playerID in clientCallbacks) {\n      var _arg = arg(playerID),\n          type = _arg.type,\n          args = _arg.args;\n\n      send({\n        type: type,\n        playerID: playerID,\n        args: args\n      });\n    }\n  };\n\n  var master = new Master(game, new InMemory(), {\n    send: send,\n    sendAll: sendAll\n  }, false);\n  master.executeSynchronously = true;\n\n  master.connect = function (gameID, playerID, callback) {\n    clientCallbacks[playerID] = callback;\n  };\n\n  return master;\n}\n/**\n * Local\n *\n * Transport interface that embeds a GameMaster within it\n * that you can connect multiple clients to.\n */\n\nexport var Local =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new Mutiplayer instance.\n   * @param {object} socket - Override for unit tests.\n   * @param {object} socketOpts - Options to pass to socket.io.\n   * @param {string} gameID - The game ID to connect to.\n   * @param {string} playerID - The player ID associated with this client.\n   * @param {string} gameName - The game type (the `name` field in `Game`).\n   * @param {string} numPlayers - The number of players.\n   * @param {string} server - The game server in the form of 'hostname:port'. Defaults to the server serving the client if not provided.\n   */\n  function Local(_ref2) {\n    var master = _ref2.master,\n        store = _ref2.store,\n        gameID = _ref2.gameID,\n        playerID = _ref2.playerID,\n        gameName = _ref2.gameName,\n        numPlayers = _ref2.numPlayers;\n\n    _classCallCheck(this, Local);\n\n    this.master = master;\n    this.store = store;\n    this.gameName = gameName || 'default';\n    this.gameID = gameID || 'default';\n    this.playerID = playerID || null;\n    this.numPlayers = numPlayers || 2;\n    this.gameID = this.gameName + ':' + this.gameID;\n    this.isConnected = true;\n  }\n  /**\n   * Called when another player makes a move and the\n   * master broadcasts the update to other clients (including\n   * this one).\n   */\n\n\n  _createClass(Local, [{\n    key: \"onUpdate\",\n    value: function onUpdate(gameID, state, deltalog) {\n      var currentState = this.store.getState();\n\n      if (gameID == this.gameID && state._stateID >= currentState._stateID) {\n        var action = ActionCreators.update(state, deltalog);\n        this.store.dispatch(action);\n      }\n    }\n    /**\n     * Called when the client first connects to the master\n     * and requests the current game state.\n     */\n\n  }, {\n    key: \"onSync\",\n    value: function onSync(gameID, state, log) {\n      if (gameID == this.gameID) {\n        var action = ActionCreators.sync(state, log);\n        this.store.dispatch(action);\n      }\n    }\n    /**\n     * Called when an action that has to be relayed to the\n     * game master is made.\n     */\n\n  }, {\n    key: \"onAction\",\n    value: function onAction(state, action) {\n      this.master.onUpdate(action, state._stateID, this.gameID, this.playerID);\n    }\n    /**\n     * Connect to the server.\n     */\n\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      var _this = this;\n\n      this.master.connect(this.gameID, this.playerID, function (type) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        if (type == 'sync') {\n          _this.onSync.apply(_this, args);\n        }\n\n        if (type == 'update') {\n          _this.onUpdate.apply(_this, args);\n        }\n      });\n      this.master.onSync(this.gameID, this.playerID, this.numPlayers);\n    }\n    /**\n     * Subscribe to connection state changes.\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function subscribe() {}\n  }, {\n    key: \"subscribeGameMetadata\",\n    value: function subscribeGameMetadata(_metadata) {} // eslint-disable-line no-unused-vars\n\n    /**\n     * Updates the game id.\n     * @param {string} id - The new game id.\n     */\n\n  }, {\n    key: \"updateGameID\",\n    value: function updateGameID(id) {\n      this.gameID = this.gameName + ':' + id;\n      var action = ActionCreators.reset(null);\n      this.store.dispatch(action);\n      this.master.onSync(this.gameID, this.playerID, this.numPlayers);\n    }\n    /**\n     * Updates the player associated with this client.\n     * @param {string} id - The new player id.\n     */\n\n  }, {\n    key: \"updatePlayerID\",\n    value: function updatePlayerID(id) {\n      this.playerID = id;\n      var action = ActionCreators.reset(null);\n      this.store.dispatch(action);\n      this.master.onSync(this.gameID, this.playerID, this.numPlayers);\n    }\n  }]);\n\n  return Local;\n}();","import _objectSpread from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*\n * Copyright 2017 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport * as Actions from '../core/action-types';\nimport * as ActionCreators from '../core/action-creators';\nimport { Game } from '../core/game';\nimport { error } from '../core/logger';\nimport { SocketIO } from './transport/socketio';\nimport { Local, LocalMaster } from './transport/local';\nimport { CreateGameReducer } from '../core/reducer';\nimport { InitializeGame } from '../core/initialize'; // The Game Master object (if using a local one).\n\nvar localMaster_ = null;\n/**\n * createDispatchers\n *\n * Create action dispatcher wrappers with bound playerID and credentials\n */\n\nfunction createDispatchers(storeActionType, innerActionNames, store, playerID, credentials, multiplayer) {\n  return innerActionNames.reduce(function (dispatchers, name) {\n    dispatchers[name] = function () {\n      var assumedPlayerID = playerID; // In singleplayer mode, if the client does not have a playerID\n      // associated with it, we attach the currentPlayer as playerID.\n\n      if (!multiplayer && (playerID === null || playerID === undefined)) {\n        var state = store.getState();\n        assumedPlayerID = state.ctx.currentPlayer;\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      store.dispatch(ActionCreators[storeActionType](name, args, assumedPlayerID, credentials));\n    };\n\n    return dispatchers;\n  }, {});\n}\n/**\n * createEventDispatchers\n *\n * Creates a set of dispatchers to dispatch game flow events.\n * @param {Array} eventNames - A list of event names.\n * @param {object} store - The Redux store to create dispatchers for.\n * @param {string} playerID - The ID of the player dispatching these events.\n * @param {string} credentials - A key indicating that the player is authorized to play.\n */\n\n\nexport var createEventDispatchers = createDispatchers.bind(null, 'gameEvent');\n/**\n * createMoveDispatchers\n *\n * Creates a set of dispatchers to make moves.\n * @param {Array} moveNames - A list of move names.\n * @param {object} store - The Redux store to create dispatchers for.\n * @param {string} playerID - The ID of the player dispatching these events.\n * @param {string} credentials - A key indicating that the player is authorized to play.\n */\n\nexport var createMoveDispatchers = createDispatchers.bind(null, 'makeMove');\n/**\n * Implementation of Client (see below).\n */\n\nvar _ClientImpl =\n/*#__PURE__*/\nfunction () {\n  function _ClientImpl(_ref) {\n    var _this = this;\n\n    var game = _ref.game,\n        ai = _ref.ai,\n        numPlayers = _ref.numPlayers,\n        multiplayer = _ref.multiplayer,\n        socketOpts = _ref.socketOpts,\n        gameID = _ref.gameID,\n        playerID = _ref.playerID,\n        credentials = _ref.credentials,\n        enhancer = _ref.enhancer;\n\n    _classCallCheck(this, _ClientImpl);\n\n    this.game = Game(game);\n    this.playerID = playerID;\n    this.gameID = gameID;\n    this.credentials = credentials;\n    this.multiplayer = multiplayer;\n\n    this.subscribeCallback = function () {};\n\n    this.reducer = CreateGameReducer({\n      game: this.game,\n      numPlayers: numPlayers,\n      multiplayer: multiplayer\n    });\n\n    if (ai !== undefined && multiplayer === undefined) {\n      var bot = new ai.bot({\n        game: game,\n        enumerate: ai.enumerate\n      });\n      this.step =\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var state, playerID, _ref3, action, metadata;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                state = _this.store.getState();\n                playerID = state.ctx.currentPlayer;\n\n                if (state.ctx.activePlayers) {\n                  playerID = Object.keys(state.ctx.activePlayers)[0];\n                }\n\n                _context.next = 5;\n                return bot.play(state, playerID);\n\n              case 5:\n                _ref3 = _context.sent;\n                action = _ref3.action;\n                metadata = _ref3.metadata;\n\n                if (action) {\n                  action.payload.metadata = metadata;\n\n                  _this.store.dispatch(action);\n                }\n\n                return _context.abrupt(\"return\", action);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n\n    var initialState = null;\n\n    if (multiplayer === undefined) {\n      initialState = InitializeGame({\n        game: this.game,\n        numPlayers: numPlayers\n      });\n    }\n\n    this.reset = function () {\n      _this.store.dispatch(ActionCreators.reset(initialState));\n    };\n\n    this.undo = function () {\n      _this.store.dispatch(ActionCreators.undo());\n    };\n\n    this.redo = function () {\n      _this.store.dispatch(ActionCreators.redo());\n    };\n\n    this.store = null;\n    this.log = [];\n    /**\n     * Middleware that manages the log object.\n     * Reducers generate deltalogs, which are log events\n     * that are the result of application of a single action.\n     * The master may also send back a deltalog or the entire\n     * log depending on the type of request.\n     * The middleware below takes care of all these cases while\n     * managing the log object.\n     */\n\n    var LogMiddleware = function LogMiddleware(store) {\n      return function (next) {\n        return function (action) {\n          var result = next(action);\n          var state = store.getState();\n\n          switch (action.type) {\n            case Actions.MAKE_MOVE:\n            case Actions.GAME_EVENT:\n              {\n                var deltalog = state.deltalog;\n                _this.log = [].concat(_toConsumableArray(_this.log), _toConsumableArray(deltalog));\n                break;\n              }\n\n            case Actions.RESET:\n              {\n                _this.log = [];\n                break;\n              }\n\n            case Actions.UPDATE:\n              {\n                var id = -1;\n\n                if (_this.log.length > 0) {\n                  id = _this.log[_this.log.length - 1]._stateID;\n                }\n\n                var _deltalog = action.deltalog || []; // Filter out actions that are already present\n                // in the current log. This may occur when the\n                // client adds an entry to the log followed by\n                // the update from the master here.\n\n\n                _deltalog = _deltalog.filter(function (l) {\n                  return l._stateID > id;\n                });\n                _this.log = [].concat(_toConsumableArray(_this.log), _toConsumableArray(_deltalog));\n                break;\n              }\n\n            case Actions.SYNC:\n              {\n                _this.log = action.log || [];\n                break;\n              }\n          }\n\n          return result;\n        };\n      };\n    };\n    /**\n     * Middleware that intercepts actions and sends them to the master,\n     * which keeps the authoritative version of the state.\n     */\n\n\n    var TransportMiddleware = function TransportMiddleware(store) {\n      return function (next) {\n        return function (action) {\n          var baseState = store.getState();\n          var result = next(action);\n\n          if (action.clientOnly != true) {\n            _this.transport.onAction(baseState, action);\n          }\n\n          return result;\n        };\n      };\n    };\n    /**\n     * Middleware that intercepts actions and invokes the subscription callback.\n     */\n\n\n    var SubscriptionMiddleware = function SubscriptionMiddleware() {\n      return function (next) {\n        return function (action) {\n          var result = next(action);\n\n          _this.subscribeCallback();\n\n          return result;\n        };\n      };\n    };\n\n    if (enhancer !== undefined) {\n      enhancer = compose(applyMiddleware(SubscriptionMiddleware, TransportMiddleware, LogMiddleware), enhancer);\n    } else {\n      enhancer = applyMiddleware(SubscriptionMiddleware, TransportMiddleware, LogMiddleware);\n    }\n\n    this.store = createStore(this.reducer, initialState, enhancer);\n    this.transport = {\n      isConnected: true,\n      onAction: function onAction() {},\n      subscribe: function subscribe() {},\n      subscribeGameMetadata: function subscribeGameMetadata(_metadata) {},\n      // eslint-disable-line no-unused-vars\n      connect: function connect() {},\n      updateGameID: function updateGameID() {},\n      updatePlayerID: function updatePlayerID() {}\n    };\n\n    if (multiplayer !== undefined) {\n      if (multiplayer === true) {\n        multiplayer = {\n          server: ''\n        };\n      }\n\n      if (multiplayer.local === true) {\n        if (localMaster_ === null || localMaster_.config !== game) {\n          localMaster_ = new LocalMaster(this.game);\n          localMaster_.config = game;\n        }\n\n        this.transport = new Local({\n          master: localMaster_,\n          store: this.store,\n          gameID: gameID,\n          playerID: playerID,\n          gameName: this.game.name,\n          numPlayers: numPlayers\n        });\n      } else if (multiplayer.server !== undefined) {\n        this.transport = new SocketIO({\n          store: this.store,\n          gameID: gameID,\n          playerID: playerID,\n          gameName: this.game.name,\n          numPlayers: numPlayers,\n          server: multiplayer.server,\n          socketOpts: socketOpts\n        });\n      } else if (multiplayer.transport !== undefined) {\n        this.transport = new multiplayer.transport({\n          store: this.store,\n          gameID: gameID,\n          playerID: playerID,\n          gameName: game.name,\n          numPlayers: numPlayers\n        });\n      } else {\n        error('invalid multiplayer spec');\n      }\n    }\n\n    this.createDispatchers();\n    this.transport.subscribeGameMetadata(function (metadata) {\n      _this.gameMetadata = metadata;\n    });\n  }\n\n  _createClass(_ClientImpl, [{\n    key: \"subscribe\",\n    value: function subscribe(fn) {\n      var _this2 = this;\n\n      var callback = function callback() {\n        return fn(_this2.getState());\n      };\n\n      this.transport.subscribe(callback);\n      this.subscribeCallback = callback;\n    }\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      var state = this.store.getState(); // This is the state before a sync with the game master.\n\n      if (state === null) {\n        return state;\n      } // isActive.\n\n\n      var isActive = true;\n      var canPlayerMakeMove = this.game.flow.canPlayerMakeAnyMove(state.G, state.ctx, this.playerID);\n\n      if (this.multiplayer && !canPlayerMakeMove) {\n        isActive = false;\n      }\n\n      if (!this.multiplayer && this.playerID !== null && this.playerID !== undefined && !canPlayerMakeMove) {\n        isActive = false;\n      }\n\n      if (state.ctx.gameover !== undefined) {\n        isActive = false;\n      } // Secrets are normally stripped on the server,\n      // but we also strip them here so that game developers\n      // can see their effects while prototyping.\n\n\n      var G = this.game.playerView(state.G, state.ctx, this.playerID); // Combine into return value.\n\n      var ret = _objectSpread({}, state, {\n        isActive: isActive,\n        G: G,\n        log: this.log\n      });\n\n      var isConnected = this.transport.isConnected;\n      ret = _objectSpread({}, ret, {\n        isConnected: isConnected\n      });\n      return ret;\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      this.transport.connect();\n    }\n  }, {\n    key: \"createDispatchers\",\n    value: function createDispatchers() {\n      this.moves = createMoveDispatchers(this.game.moveNames, this.store, this.playerID, this.credentials, this.multiplayer);\n      this.events = createEventDispatchers(this.game.flow.enabledEventNames, this.store, this.playerID, this.credentials, this.multiplayer);\n    }\n  }, {\n    key: \"updatePlayerID\",\n    value: function updatePlayerID(playerID) {\n      this.playerID = playerID;\n      this.createDispatchers();\n      this.transport.updatePlayerID(playerID);\n    }\n  }, {\n    key: \"updateGameID\",\n    value: function updateGameID(gameID) {\n      this.gameID = gameID;\n      this.createDispatchers();\n      this.transport.updateGameID(gameID);\n    }\n  }, {\n    key: \"updateCredentials\",\n    value: function updateCredentials(credentials) {\n      this.credentials = credentials;\n      this.createDispatchers();\n    }\n  }]);\n\n  return _ClientImpl;\n}();\n/**\n * Client\n *\n * boardgame.io JS client.\n *\n * @param {...object} game - The return value of `Game`.\n * @param {...object} numPlayers - The number of players.\n * @param {...object} multiplayer - Set to true or { server: '<host>:<port>' }\n *                                  to make a multiplayer client. The second\n *                                  syntax specifies a non-default socket server.\n * @param {...object} socketOpts - Options to pass to socket.io.\n * @param {...object} gameID - The gameID that you want to connect to.\n * @param {...object} playerID - The playerID associated with this client.\n * @param {...string} credentials - The authentication credentials associated with this client.\n *\n * Returns:\n *   A JS object that provides an API to interact with the\n *   game by dispatching moves and events.\n */\n\n\nexport function Client(opts) {\n  return new _ClientImpl(opts);\n}","import _objectSpread from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\n/*\n * Copyright 2017 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Debug } from './debug/debug';\nimport { Client as RawClient } from './client';\n/**\n * Client\n *\n * boardgame.io React client.\n *\n * @param {...object} game - The return value of `Game`.\n * @param {...object} numPlayers - The number of players.\n * @param {...object} board - The React component for the game.\n * @param {...object} loading - (optional) The React component for the loading state.\n * @param {...object} multiplayer - Set to true or { server: '<host>:<port>' }\n *                                  to make a multiplayer client. The second\n *                                  syntax specifies a non-default socket server.\n * @param {...object} debug - Enables the Debug UI.\n * @param {...object} enhancer - Optional enhancer to send to the Redux store\n *\n * Returns:\n *   A React component that wraps board and provides an\n *   API through props for it to interact with the framework\n *   and dispatch actions such as MAKE_MOVE, GAME_EVENT, RESET,\n *   UNDO and REDO.\n */\n\nexport function Client(opts) {\n  var _class, _temp;\n\n  var game = opts.game,\n      numPlayers = opts.numPlayers,\n      loading = opts.loading,\n      board = opts.board,\n      multiplayer = opts.multiplayer,\n      ai = opts.ai,\n      debug = opts.debug,\n      enhancer = opts.enhancer; // Component that is displayed before the client has synced\n  // with the game master.\n\n  if (loading === undefined) {\n    var Loading = function Loading() {\n      return React.createElement(\"div\", {\n        className: \"bgio-loading\"\n      }, \"connecting...\");\n    };\n\n    loading = Loading;\n  }\n  /*\n   * WrappedBoard\n   *\n   * The main React component that wraps the passed in\n   * board component and adds the API to its props.\n   */\n\n\n  return _temp = _class =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inherits(WrappedBoard, _React$Component);\n\n    function WrappedBoard(props) {\n      var _this;\n\n      _classCallCheck(this, WrappedBoard);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(WrappedBoard).call(this, props));\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n        gameStateOverride: null\n      });\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"updateGameID\", function (gameID) {\n        _this.client.updateGameID(gameID);\n\n        _this.gameID = gameID;\n\n        _this.forceUpdate();\n      });\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"updatePlayerID\", function (playerID) {\n        _this.client.updatePlayerID(playerID);\n\n        _this.playerID = playerID;\n\n        _this.forceUpdate();\n      });\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"updateCredentials\", function (credentials) {\n        _this.client.updateCredentials(credentials);\n\n        _this.credentials = credentials;\n\n        _this.forceUpdate();\n      });\n\n      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"overrideGameState\", function (state) {\n        _this.setState({\n          gameStateOverride: state\n        });\n      });\n\n      _this.client = RawClient({\n        game: game,\n        ai: ai,\n        numPlayers: numPlayers,\n        multiplayer: multiplayer,\n        gameID: props.gameID,\n        playerID: props.playerID,\n        credentials: props.credentials,\n        enhancer: enhancer\n      });\n      _this.gameID = props.gameID;\n      _this.playerID = props.playerID;\n      _this.credentials = props.credentials;\n\n      _this.client.subscribe(function () {\n        return _this.forceUpdate();\n      });\n\n      return _this;\n    }\n\n    _createClass(WrappedBoard, [{\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        if (this.props.gameID != prevProps.gameID) {\n          this.updateGameID(this.props.gameID);\n        }\n\n        if (this.props.playerID != prevProps.playerID) {\n          this.updatePlayerID(this.props.playerID);\n        }\n\n        if (this.props.credentials != prevProps.credentials) {\n          this.updateCredentials(this.props.credentials);\n        }\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.client.connect();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _board = null;\n        var _debug = null;\n        var state = this.client.getState();\n\n        var _this$props = this.props,\n            debugProp = _this$props.debug,\n            rest = _objectWithoutProperties(_this$props, [\"debug\"]);\n\n        if (this.state.gameStateOverride) {\n          state = _objectSpread({}, state, this.state.gameStateOverride);\n        }\n\n        if (state === null) {\n          return React.createElement(loading);\n        }\n\n        if (board) {\n          _board = React.createElement(board, _objectSpread({}, state, rest, {\n            isMultiplayer: multiplayer !== undefined,\n            moves: this.client.moves,\n            events: this.client.events,\n            gameID: this.gameID,\n            playerID: this.playerID,\n            step: this.client.step,\n            reset: this.client.reset,\n            undo: this.client.undo,\n            redo: this.client.redo,\n            gameMetadata: this.client.gameMetadata\n          }));\n        }\n\n        if (debug !== false && debugProp) {\n          var showGameInfo = typeof debug === 'object' && debug.showGameInfo;\n          var dockControls = typeof debug === 'object' && debug.dockControls;\n          _debug = React.createElement(Debug, {\n            gamestate: state,\n            reducer: this.client.reducer,\n            store: this.client.store,\n            isMultiplayer: multiplayer !== undefined,\n            moves: this.client.moves,\n            events: this.client.events,\n            gameID: this.gameID,\n            playerID: this.playerID,\n            credentials: this.credentials,\n            step: this.client.step,\n            reset: this.client.reset,\n            undo: this.client.undo,\n            redo: this.client.redo,\n            visualizeAI: ai && ai.visualize,\n            overrideGameState: this.overrideGameState,\n            updateGameID: this.updateGameID,\n            updatePlayerID: this.updatePlayerID,\n            updateCredentials: this.updateCredentials,\n            showGameInfo: showGameInfo,\n            dockControls: dockControls\n          });\n        }\n\n        return React.createElement(\"div\", {\n          className: \"bgio-client\"\n        }, _debug, _board);\n      }\n    }]);\n\n    return WrappedBoard;\n  }(React.Component), _defineProperty(_class, \"propTypes\", {\n    // The ID of a game to connect to.\n    // Only relevant in multiplayer.\n    gameID: PropTypes.string,\n    // The ID of the player associated with this client.\n    // Only relevant in multiplayer.\n    playerID: PropTypes.string,\n    // This client's authentication credentials.\n    // Only relevant in multiplayer.\n    credentials: PropTypes.string,\n    // Enable / disable the Debug UI.\n    debug: PropTypes.any\n  }), _defineProperty(_class, \"defaultProps\", {\n    gameID: 'default',\n    playerID: null,\n    credentials: null,\n    debug: true\n  }), _temp;\n}","import _regeneratorRuntime from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*\n * Copyright 2018 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nvar _LobbyConnectionImpl =\n/*#__PURE__*/\nfunction () {\n  function _LobbyConnectionImpl(_ref) {\n    var server = _ref.server,\n        gameComponents = _ref.gameComponents,\n        playerName = _ref.playerName,\n        playerCredentials = _ref.playerCredentials;\n\n    _classCallCheck(this, _LobbyConnectionImpl);\n\n    this.gameComponents = gameComponents;\n    this.playerName = playerName || 'Visitor';\n    this.playerCredentials = playerCredentials;\n    this.server = server;\n    this.rooms = [];\n  }\n\n  _createClass(_LobbyConnectionImpl, [{\n    key: \"_baseUrl\",\n    value: function _baseUrl() {\n      return \"\".concat(this.server || '', \"/games\");\n    }\n  }, {\n    key: \"refresh\",\n    value: function () {\n      var _refresh = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var resp, json, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, gameName, gameResp, gameJson, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, inst;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                this.rooms.length = 0;\n                _context.next = 4;\n                return fetch(this._baseUrl());\n\n              case 4:\n                resp = _context.sent;\n\n                if (!(resp.status !== 200)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                throw new Error('HTTP status ' + resp.status);\n\n              case 7:\n                _context.next = 9;\n                return resp.json();\n\n              case 9:\n                json = _context.sent;\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context.prev = 13;\n                _iterator = json[Symbol.iterator]();\n\n              case 15:\n                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                  _context.next = 48;\n                  break;\n                }\n\n                gameName = _step.value;\n\n                if (this._getGameComponents(gameName)) {\n                  _context.next = 19;\n                  break;\n                }\n\n                return _context.abrupt(\"continue\", 45);\n\n              case 19:\n                _context.next = 21;\n                return fetch(this._baseUrl() + '/' + gameName);\n\n              case 21:\n                gameResp = _context.sent;\n                _context.next = 24;\n                return gameResp.json();\n\n              case 24:\n                gameJson = _context.sent;\n                _iteratorNormalCompletion2 = true;\n                _didIteratorError2 = false;\n                _iteratorError2 = undefined;\n                _context.prev = 28;\n\n                for (_iterator2 = gameJson.rooms[Symbol.iterator](); !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                  inst = _step2.value;\n                  inst.gameName = gameName;\n                }\n\n                _context.next = 36;\n                break;\n\n              case 32:\n                _context.prev = 32;\n                _context.t0 = _context[\"catch\"](28);\n                _didIteratorError2 = true;\n                _iteratorError2 = _context.t0;\n\n              case 36:\n                _context.prev = 36;\n                _context.prev = 37;\n\n                if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                  _iterator2.return();\n                }\n\n              case 39:\n                _context.prev = 39;\n\n                if (!_didIteratorError2) {\n                  _context.next = 42;\n                  break;\n                }\n\n                throw _iteratorError2;\n\n              case 42:\n                return _context.finish(39);\n\n              case 43:\n                return _context.finish(36);\n\n              case 44:\n                this.rooms = this.rooms.concat(gameJson.rooms);\n\n              case 45:\n                _iteratorNormalCompletion = true;\n                _context.next = 15;\n                break;\n\n              case 48:\n                _context.next = 54;\n                break;\n\n              case 50:\n                _context.prev = 50;\n                _context.t1 = _context[\"catch\"](13);\n                _didIteratorError = true;\n                _iteratorError = _context.t1;\n\n              case 54:\n                _context.prev = 54;\n                _context.prev = 55;\n\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n\n              case 57:\n                _context.prev = 57;\n\n                if (!_didIteratorError) {\n                  _context.next = 60;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 60:\n                return _context.finish(57);\n\n              case 61:\n                return _context.finish(54);\n\n              case 62:\n                _context.next = 67;\n                break;\n\n              case 64:\n                _context.prev = 64;\n                _context.t2 = _context[\"catch\"](0);\n                throw new Error('failed to retrieve list of games (' + _context.t2 + ')');\n\n              case 67:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 64], [13, 50, 54, 62], [28, 32, 36, 44], [37,, 39, 43], [55,, 57, 61]]);\n      }));\n\n      function refresh() {\n        return _refresh.apply(this, arguments);\n      }\n\n      return refresh;\n    }()\n  }, {\n    key: \"_getGameInstance\",\n    value: function _getGameInstance(gameID) {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.rooms[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var inst = _step3.value;\n          if (inst['gameID'] === gameID) return inst;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_getGameComponents\",\n    value: function _getGameComponents(gameName) {\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.gameComponents[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var comp = _step4.value;\n          if (comp.game.name === gameName) return comp;\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_findPlayer\",\n    value: function _findPlayer(playerName) {\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this.rooms[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var inst = _step5.value;\n          if (inst.players.some(function (player) {\n            return player.name === playerName;\n          })) return inst;\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"join\",\n    value: function () {\n      var _join = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(gameName, gameID, playerID) {\n        var inst, resp, json;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                inst = this._findPlayer(this.playerName);\n\n                if (!inst) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                throw new Error('player has already joined ' + inst.gameID);\n\n              case 4:\n                inst = this._getGameInstance(gameID);\n\n                if (inst) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                throw new Error('game instance ' + gameID + ' not found');\n\n              case 7:\n                _context2.next = 9;\n                return fetch(this._baseUrl() + '/' + gameName + '/' + gameID + '/join', {\n                  method: 'POST',\n                  body: JSON.stringify({\n                    playerID: playerID,\n                    playerName: this.playerName\n                  }),\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                });\n\n              case 9:\n                resp = _context2.sent;\n\n                if (!(resp.status !== 200)) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                throw new Error('HTTP status ' + resp.status);\n\n              case 12:\n                _context2.next = 14;\n                return resp.json();\n\n              case 14:\n                json = _context2.sent;\n                inst.players[Number.parseInt(playerID)].name = this.playerName;\n                this.playerCredentials = json.playerCredentials;\n                _context2.next = 22;\n                break;\n\n              case 19:\n                _context2.prev = 19;\n                _context2.t0 = _context2[\"catch\"](0);\n                throw new Error('failed to join room ' + gameID + ' (' + _context2.t0 + ')');\n\n              case 22:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 19]]);\n      }));\n\n      function join(_x, _x2, _x3) {\n        return _join.apply(this, arguments);\n      }\n\n      return join;\n    }()\n  }, {\n    key: \"leave\",\n    value: function () {\n      var _leave = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(gameName, gameID) {\n        var inst, _iteratorNormalCompletion6, _didIteratorError6, _iteratorError6, _iterator6, _step6, player, resp;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                inst = this._getGameInstance(gameID);\n\n                if (inst) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                throw new Error('game instance not found');\n\n              case 4:\n                _iteratorNormalCompletion6 = true;\n                _didIteratorError6 = false;\n                _iteratorError6 = undefined;\n                _context3.prev = 7;\n                _iterator6 = inst.players[Symbol.iterator]();\n\n              case 9:\n                if (_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done) {\n                  _context3.next = 23;\n                  break;\n                }\n\n                player = _step6.value;\n\n                if (!(player.name === this.playerName)) {\n                  _context3.next = 20;\n                  break;\n                }\n\n                _context3.next = 14;\n                return fetch(this._baseUrl() + '/' + gameName + '/' + gameID + '/leave', {\n                  method: 'POST',\n                  body: JSON.stringify({\n                    playerID: player.id,\n                    credentials: this.playerCredentials\n                  }),\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                });\n\n              case 14:\n                resp = _context3.sent;\n\n                if (!(resp.status !== 200)) {\n                  _context3.next = 17;\n                  break;\n                }\n\n                throw new Error('HTTP status ' + resp.status);\n\n              case 17:\n                delete player.name;\n                delete this.playerCredentials;\n                return _context3.abrupt(\"return\");\n\n              case 20:\n                _iteratorNormalCompletion6 = true;\n                _context3.next = 9;\n                break;\n\n              case 23:\n                _context3.next = 29;\n                break;\n\n              case 25:\n                _context3.prev = 25;\n                _context3.t0 = _context3[\"catch\"](7);\n                _didIteratorError6 = true;\n                _iteratorError6 = _context3.t0;\n\n              case 29:\n                _context3.prev = 29;\n                _context3.prev = 30;\n\n                if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n                  _iterator6.return();\n                }\n\n              case 32:\n                _context3.prev = 32;\n\n                if (!_didIteratorError6) {\n                  _context3.next = 35;\n                  break;\n                }\n\n                throw _iteratorError6;\n\n              case 35:\n                return _context3.finish(32);\n\n              case 36:\n                return _context3.finish(29);\n\n              case 37:\n                throw new Error('player not found in room');\n\n              case 40:\n                _context3.prev = 40;\n                _context3.t1 = _context3[\"catch\"](0);\n                throw new Error('failed to leave room ' + gameID + ' (' + _context3.t1 + ')');\n\n              case 43:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 40], [7, 25, 29, 37], [30,, 32, 36]]);\n      }));\n\n      function leave(_x4, _x5) {\n        return _leave.apply(this, arguments);\n      }\n\n      return leave;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var inst;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                inst = this._findPlayer(this.playerName);\n\n                if (!inst) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                _context4.next = 4;\n                return this.leave(inst.gameName, inst.gameID);\n\n              case 4:\n                this.rooms = [];\n                this.playerName = 'Visitor';\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n\n      return disconnect;\n    }()\n  }, {\n    key: \"create\",\n    value: function () {\n      var _create = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(gameName, numPlayers) {\n        var comp, resp;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                comp = this._getGameComponents(gameName);\n\n                if (comp) {\n                  _context5.next = 4;\n                  break;\n                }\n\n                throw new Error('game not found');\n\n              case 4:\n                if (!(numPlayers < comp.game.minPlayers || numPlayers > comp.game.maxPlayers)) {\n                  _context5.next = 6;\n                  break;\n                }\n\n                throw new Error('invalid number of players ' + numPlayers);\n\n              case 6:\n                _context5.next = 8;\n                return fetch(this._baseUrl() + '/' + gameName + '/create', {\n                  method: 'POST',\n                  body: JSON.stringify({\n                    numPlayers: numPlayers\n                  }),\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                });\n\n              case 8:\n                resp = _context5.sent;\n\n                if (!(resp.status !== 200)) {\n                  _context5.next = 11;\n                  break;\n                }\n\n                throw new Error('HTTP status ' + resp.status);\n\n              case 11:\n                _context5.next = 16;\n                break;\n\n              case 13:\n                _context5.prev = 13;\n                _context5.t0 = _context5[\"catch\"](0);\n                throw new Error('failed to create room for ' + gameName + ' (' + _context5.t0 + ')');\n\n              case 16:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 13]]);\n      }));\n\n      function create(_x6, _x7) {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }()\n  }]);\n\n  return _LobbyConnectionImpl;\n}();\n/**\n * LobbyConnection\n *\n * Lobby model.\n *\n * @param {string}   server - '<host>:<port>' of the server.\n * @param {Array}    gameComponents - A map of Board and Game objects for the supported games.\n * @param {string}   playerName - The name of the player.\n * @param {string}   playerCredentials - The credentials currently used by the player, if any.\n *\n * Returns:\n *   A JS object that synchronizes the list of running game instances with the server and provides an API to create/join/start instances.\n */\n\n\nexport function LobbyConnection(opts) {\n  return new _LobbyConnectionImpl(opts);\n}","import _classCallCheck from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\n/*\n * Copyright 2018 The boardgame.io Authors.\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar LobbyLoginForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LobbyLoginForm, _React$Component);\n\n  function LobbyLoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LobbyLoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LobbyLoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      playerName: _this.props.playerName,\n      nameErrorMsg: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onClickEnter\", function () {\n      if (_this.state.playerName === '') return;\n\n      _this.props.onEnter(_this.state.playerName);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onKeyPress\", function (event) {\n      if (event.key === 'Enter') {\n        _this.onClickEnter();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onChangePlayerName\", function (event) {\n      var name = event.target.value.trim();\n\n      _this.setState({\n        playerName: name,\n        nameErrorMsg: name.length > 0 ? '' : 'empty player name'\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(LobbyLoginForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", null, React.createElement(\"p\", {\n        className: \"phase-title\"\n      }, \"Choose a player name:\"), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.playerName,\n        onChange: this.onChangePlayerName,\n        onKeyPress: this.onKeyPress\n      }), React.createElement(\"span\", {\n        className: \"buttons\"\n      }, React.createElement(\"button\", {\n        className: \"buttons\",\n        onClick: this.onClickEnter\n      }, \"Enter\")), React.createElement(\"br\", null), React.createElement(\"span\", {\n        className: \"error-msg\"\n      }, this.state.nameErrorMsg, React.createElement(\"br\", null)));\n    }\n  }]);\n\n  return LobbyLoginForm;\n}(React.Component);\n\n_defineProperty(LobbyLoginForm, \"propTypes\", {\n  playerName: PropTypes.string,\n  onEnter: PropTypes.func.isRequired\n});\n\n_defineProperty(LobbyLoginForm, \"defaultProps\", {\n  playerName: ''\n});\n\nexport default LobbyLoginForm;","import _classCallCheck from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\n/*\n * Copyright 2018 The boardgame.io Authors.\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar LobbyRoomInstance =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LobbyRoomInstance, _React$Component);\n\n  function LobbyRoomInstance() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LobbyRoomInstance);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LobbyRoomInstance)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_createSeat\", function (player) {\n      return player.name || '[free]';\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_createInstanceButtons\", function (inst) {\n      var playerSeat = inst.players.find(function (player) {\n        return player.name === _this.props.playerName;\n      });\n      var freeSeat = inst.players.find(function (player) {\n        return !player.name;\n      });\n\n      if (playerSeat && freeSeat) {\n        // already seated: waiting for game to start\n        return React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this.props.onClickLeave(inst.gameName, inst.gameID);\n          }\n        }, \"Leave\");\n      }\n\n      if (freeSeat) {\n        // at least 1 seat is available\n        return React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this.props.onClickJoin(inst.gameName, inst.gameID, '' + freeSeat.id);\n          }\n        }, \"Join\");\n      } // room is full\n\n\n      if (playerSeat) {\n        return React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this.props.onClickPlay(inst.gameName, {\n              gameID: inst.gameID,\n              playerID: '' + playerSeat.id,\n              numPlayers: inst.players.length\n            });\n          }\n        }, \"Play\");\n      } // allow spectating\n\n\n      return React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this.props.onClickPlay(inst.gameName, {\n            gameID: inst.gameID,\n            numPlayers: inst.players.length\n          });\n        }\n      }, \"Spectate\");\n    });\n\n    return _this;\n  }\n\n  _createClass(LobbyRoomInstance, [{\n    key: \"render\",\n    value: function render() {\n      var room = this.props.room;\n      var status = 'OPEN';\n\n      if (!room.players.find(function (player) {\n        return !player.name;\n      })) {\n        status = 'RUNNING';\n      }\n\n      return React.createElement(\"tr\", {\n        key: 'line-' + room.gameID\n      }, React.createElement(\"td\", {\n        key: 'cell-name-' + room.gameID\n      }, room.gameName), React.createElement(\"td\", {\n        key: 'cell-status-' + room.gameID\n      }, status), React.createElement(\"td\", {\n        key: 'cell-seats-' + room.gameID\n      }, room.players.map(this._createSeat).join(', ')), React.createElement(\"td\", {\n        key: 'cell-buttons-' + room.gameID\n      }, this._createInstanceButtons(room)));\n    }\n  }]);\n\n  return LobbyRoomInstance;\n}(React.Component);\n\n_defineProperty(LobbyRoomInstance, \"propTypes\", {\n  room: PropTypes.shape({\n    gameName: PropTypes.string.isRequired,\n    gameID: PropTypes.string.isRequired,\n    players: PropTypes.array.isRequired\n  }),\n  playerName: PropTypes.string.isRequired,\n  onClickJoin: PropTypes.func.isRequired,\n  onClickLeave: PropTypes.func.isRequired,\n  onClickPlay: PropTypes.func.isRequired\n});\n\nexport default LobbyRoomInstance;","import _toConsumableArray from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\n/*\n * Copyright 2018 The boardgame.io Authors.\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar LobbyCreateRoomForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LobbyCreateRoomForm, _React$Component);\n\n  function LobbyCreateRoomForm(props) {\n    var _this;\n\n    _classCallCheck(this, LobbyCreateRoomForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LobbyCreateRoomForm).call(this, props));\n    /* fix min and max number of players */\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      selectedGame: 0,\n      numPlayers: 2\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_createGameNameOption\", function (game, idx) {\n      return React.createElement(\"option\", {\n        key: 'name-option-' + idx,\n        value: idx\n      }, game.game.name);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_createNumPlayersOption\", function (idx) {\n      return React.createElement(\"option\", {\n        key: 'num-option-' + idx,\n        value: idx\n      }, idx);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_createNumPlayersRange\", function (game) {\n      return _toConsumableArray(new Array(game.maxPlayers + 1).keys()).slice(game.minPlayers);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onChangeNumPlayers\", function (event) {\n      _this.setState({\n        numPlayers: Number.parseInt(event.target.value)\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onChangeSelectedGame\", function (event) {\n      var idx = Number.parseInt(event.target.value);\n\n      _this.setState({\n        selectedGame: idx,\n        numPlayers: _this.props.games[idx].game.minPlayers\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onClickCreate\", function () {\n      _this.props.createGame(_this.props.games[_this.state.selectedGame].game.name, _this.state.numPlayers);\n    });\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = props.games[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var game = _step.value;\n        var game_details = game.game;\n\n        if (!game_details.minPlayers) {\n          game_details.minPlayers = 1;\n        }\n\n        if (!game_details.maxPlayers) {\n          game_details.maxPlayers = 4;\n        }\n\n        console.assert(game_details.maxPlayers >= game_details.minPlayers);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    _this.state = {\n      selectedGame: 0,\n      numPlayers: props.games[0].game.minPlayers\n    };\n    return _this;\n  }\n\n  _createClass(LobbyCreateRoomForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", null, React.createElement(\"select\", {\n        value: this.state.selectedGame,\n        onChange: function onChange(evt) {\n          return _this2.onChangeSelectedGame(evt);\n        }\n      }, this.props.games.map(this._createGameNameOption)), React.createElement(\"span\", null, \"Players:\"), React.createElement(\"select\", {\n        value: this.state.numPlayers,\n        onChange: this.onChangeNumPlayers\n      }, this._createNumPlayersRange(this.props.games[this.state.selectedGame].game).map(this._createNumPlayersOption)), React.createElement(\"span\", {\n        className: \"buttons\"\n      }, React.createElement(\"button\", {\n        onClick: this.onClickCreate\n      }, \"Create\")));\n    }\n  }]);\n\n  return LobbyCreateRoomForm;\n}(React.Component);\n\n_defineProperty(LobbyCreateRoomForm, \"propTypes\", {\n  games: PropTypes.array.isRequired,\n  createGame: PropTypes.func.isRequired\n});\n\nexport default LobbyCreateRoomForm;","import _regeneratorRuntime from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"/home/nicolodavis/Desktop/boardgame.io/examples/react-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\n/*\n * Copyright 2018 The boardgame.io Authors.\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nimport React from 'react';\nimport Cookies from 'react-cookies';\nimport PropTypes from 'prop-types';\nimport { Client } from '../client/react';\nimport { LobbyConnection } from './connection';\nimport LobbyLoginForm from './login-form';\nimport LobbyRoomInstance from './room-instance';\nimport LobbyCreateRoomForm from './create-room-form';\nvar LobbyPhases = {\n  ENTER: 'enter',\n  PLAY: 'play',\n  LIST: 'list'\n};\n/**\n * Lobby\n *\n * React lobby component.\n *\n * @param {Array}  gameComponents - An array of Board and Game objects for the supported games.\n * @param {string} lobbyServer - Address of the lobby server (for example 'localhost:8000').\n *                               If not set, defaults to the server that served the page.\n * @param {string} gameServer - Address of the game server (for example 'localhost:8001').\n *                              If not set, defaults to the server that served the page.\n * @param {function} clientFactory - Function that is used to create the game clients.\n * @param {bool}   debug - Enable debug information (default: false).\n *\n * Returns:\n *   A React component that provides a UI to create, list, join, leave, play or spectate game instances.\n */\n\nvar Lobby =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Lobby, _React$Component);\n\n  function Lobby(_props) {\n    var _this;\n\n    _classCallCheck(this, Lobby);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Lobby).call(this, _props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      phase: LobbyPhases.ENTER,\n      playerName: 'Visitor',\n      runningGame: null,\n      errorMsg: '',\n      credentialStore: {}\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_createConnection\", function (props) {\n      var name = _this.state.playerName;\n      _this.connection = LobbyConnection({\n        server: props.lobbyServer,\n        gameComponents: props.gameComponents,\n        playerName: name,\n        playerCredentials: _this.state.credentialStore[name]\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_updateCredentials\", function (playerName, credentials) {\n      _this.setState(function (prevState) {\n        // clone store or componentDidUpdate will not be triggered\n        var store = Object.assign({}, prevState.credentialStore);\n        store[[playerName]] = credentials;\n        return {\n          credentialStore: store\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_updateConnection\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.connection.refresh();\n\n            case 2:\n              _this.forceUpdate();\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    })));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_enterLobby\", function (playerName) {\n      _this.setState({\n        playerName: playerName,\n        phase: LobbyPhases.LIST\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_exitLobby\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _this.connection.disconnect();\n\n            case 2:\n              _this.setState({\n                phase: LobbyPhases.ENTER,\n                errorMsg: ''\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    })));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_createRoom\",\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(gameName, numPlayers) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return _this.connection.create(gameName, numPlayers);\n\n              case 3:\n                _context3.next = 5;\n                return _this.connection.refresh();\n\n              case 5:\n                // rerender\n                _this.setState({});\n\n                _context3.next = 11;\n                break;\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](0);\n\n                _this.setState({\n                  errorMsg: _context3.t0.message\n                });\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 8]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_joinRoom\",\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(gameName, gameID, playerID) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return _this.connection.join(gameName, gameID, playerID);\n\n              case 3:\n                _context4.next = 5;\n                return _this.connection.refresh();\n\n              case 5:\n                _this._updateCredentials(_this.connection.playerName, _this.connection.playerCredentials);\n\n                _context4.next = 11;\n                break;\n\n              case 8:\n                _context4.prev = 8;\n                _context4.t0 = _context4[\"catch\"](0);\n\n                _this.setState({\n                  errorMsg: _context4.t0.message\n                });\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 8]]);\n      }));\n\n      return function (_x3, _x4, _x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_leaveRoom\",\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(gameName, gameID) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return _this.connection.leave(gameName, gameID);\n\n              case 3:\n                _context5.next = 5;\n                return _this.connection.refresh();\n\n              case 5:\n                _this._updateCredentials(_this.connection.playerName, _this.connection.playerCredentials);\n\n                _context5.next = 11;\n                break;\n\n              case 8:\n                _context5.prev = 8;\n                _context5.t0 = _context5[\"catch\"](0);\n\n                _this.setState({\n                  errorMsg: _context5.t0.message\n                });\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 8]]);\n      }));\n\n      return function (_x6, _x7) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_startGame\", function (gameName, gameOpts) {\n      var gameCode = _this.connection._getGameComponents(gameName);\n\n      if (!gameCode) {\n        _this.setState({\n          errorMsg: 'game ' + gameName + ' not supported'\n        });\n\n        return;\n      }\n\n      var multiplayer = undefined;\n\n      if (gameOpts.numPlayers > 1) {\n        if (_this.props.gameServer) {\n          multiplayer = {\n            server: _this.props.gameServer\n          };\n        } else {\n          multiplayer = true;\n        }\n      }\n\n      var app = _this.props.clientFactory({\n        game: gameCode.game,\n        board: gameCode.board,\n        debug: _this.props.debug,\n        multiplayer: multiplayer\n      });\n\n      var game = {\n        app: app,\n        gameID: gameOpts.gameID,\n        playerID: gameOpts.numPlayers > 1 ? gameOpts.playerID : null,\n        credentials: _this.connection.playerCredentials\n      };\n\n      _this.setState({\n        phase: LobbyPhases.PLAY,\n        runningGame: game\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_exitRoom\", function () {\n      _this.setState({\n        phase: LobbyPhases.LIST,\n        runningGame: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_getPhaseVisibility\", function (phase) {\n      return _this.state.phase !== phase ? 'hidden' : 'phase';\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"renderRooms\", function (rooms, playerName) {\n      return rooms.map(function (room) {\n        var gameID = room.gameID,\n            gameName = room.gameName,\n            players = room.players;\n        return React.createElement(LobbyRoomInstance, {\n          key: 'instance-' + gameID,\n          room: {\n            gameID: gameID,\n            gameName: gameName,\n            players: Object.values(players)\n          },\n          playerName: playerName,\n          onClickJoin: _this._joinRoom,\n          onClickLeave: _this._leaveRoom,\n          onClickPlay: _this._startGame\n        });\n      });\n    });\n\n    _this._createConnection(_this.props);\n\n    _this._updateConnection();\n\n    return _this;\n  }\n\n  _createClass(Lobby, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var cookie = Cookies.load('lobbyState') || {};\n\n      if (cookie.phase && cookie.phase === LobbyPhases.PLAY) {\n        cookie.phase = LobbyPhases.LIST;\n      }\n\n      this.setState({\n        phase: cookie.phase || LobbyPhases.ENTER,\n        playerName: cookie.playerName || 'Visitor',\n        credentialStore: cookie.credentialStore || {}\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var name = this.state.playerName;\n      var creds = this.state.credentialStore[name];\n\n      if (prevState.phase !== this.state.phase || prevState.credentialStore[name] !== creds || prevState.playerName !== name) {\n        this._createConnection(this.props);\n\n        this._updateConnection();\n\n        var cookie = {\n          phase: this.state.phase,\n          playerName: name,\n          credentialStore: this.state.credentialStore\n        };\n        Cookies.save('lobbyState', cookie, {\n          path: '/'\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          gameComponents = _this$props.gameComponents,\n          renderer = _this$props.renderer;\n      var _this$state = this.state,\n          errorMsg = _this$state.errorMsg,\n          playerName = _this$state.playerName,\n          phase = _this$state.phase,\n          runningGame = _this$state.runningGame;\n\n      if (renderer) {\n        return renderer({\n          errorMsg: errorMsg,\n          gameComponents: gameComponents,\n          rooms: this.connection.rooms,\n          phase: phase,\n          playerName: playerName,\n          runningGame: runningGame,\n          handleEnterLobby: this._enterLobby,\n          handleExitLobby: this._exitLobby,\n          handleCreateRoom: this._createRoom,\n          handleJoinRoom: this._joinRoom,\n          handleLeaveRoom: this._leaveRoom,\n          handleExitRoom: this._exitRoom,\n          handleRefreshRooms: this._updateConnection,\n          handleStartGame: this._startGame\n        });\n      }\n\n      return React.createElement(\"div\", {\n        id: \"lobby-view\",\n        style: {\n          padding: 50\n        }\n      }, React.createElement(\"div\", {\n        className: this._getPhaseVisibility(LobbyPhases.ENTER)\n      }, React.createElement(LobbyLoginForm, {\n        key: playerName,\n        playerName: playerName,\n        onEnter: this._enterLobby\n      })), React.createElement(\"div\", {\n        className: this._getPhaseVisibility(LobbyPhases.LIST)\n      }, React.createElement(\"p\", null, \"Welcome, \", playerName), React.createElement(\"div\", {\n        className: \"phase-title\",\n        id: \"game-creation\"\n      }, React.createElement(\"span\", null, \"Create a room:\"), React.createElement(LobbyCreateRoomForm, {\n        games: gameComponents,\n        createGame: this._createRoom\n      })), React.createElement(\"p\", {\n        className: \"phase-title\"\n      }, \"Join a room:\"), React.createElement(\"div\", {\n        id: \"instances\"\n      }, React.createElement(\"table\", null, React.createElement(\"tbody\", null, this.renderRooms(this.connection.rooms, playerName))), React.createElement(\"span\", {\n        className: \"error-msg\"\n      }, errorMsg, React.createElement(\"br\", null))), React.createElement(\"p\", {\n        className: \"phase-title\"\n      }, \"Rooms that become empty are automatically deleted.\")), React.createElement(\"div\", {\n        className: this._getPhaseVisibility(LobbyPhases.PLAY)\n      }, runningGame && React.createElement(runningGame.app, {\n        gameID: runningGame.gameID,\n        playerID: runningGame.playerID,\n        credentials: runningGame.credentials\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        id: \"game-exit\"\n      }, React.createElement(\"button\", {\n        onClick: this._exitRoom\n      }, \"Exit game\"))), React.createElement(\"div\", {\n        className: \"buttons\",\n        id: \"lobby-exit\"\n      }, React.createElement(\"button\", {\n        onClick: this._exitLobby\n      }, \"Exit lobby\")));\n    }\n  }]);\n\n  return Lobby;\n}(React.Component);\n\n_defineProperty(Lobby, \"propTypes\", {\n  gameComponents: PropTypes.array.isRequired,\n  lobbyServer: PropTypes.string,\n  gameServer: PropTypes.string,\n  debug: PropTypes.bool,\n  clientFactory: PropTypes.func\n});\n\n_defineProperty(Lobby, \"defaultProps\", {\n  debug: false,\n  clientFactory: Client\n});\n\nexport default Lobby;","/*\n * Copyright 2018 The boardgame.io Authors.\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\n\nimport React from 'react';\nimport { ActivePlayers } from 'boardgame.io/core';\n\nconst code = `{\n  turn: { activePlayers: ActivePlayers.ALL },\n}\n`;\n\nconst Description = () => (\n  <div>\n    <pre>{code}</pre>\n  </div>\n);\n\nexport default {\n  description: Description,\n  game: {\n    moves: {\n      move: G => G,\n    },\n\n    turn: { activePlayers: ActivePlayers.ALL },\n\n    events: {\n      endPhase: false,\n    },\n  },\n};\n","/*\n * Copyright 2018 The boardgame.io Authors.\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\n\nimport React from 'react';\nimport { ActivePlayers } from 'boardgame.io/core';\n\nconst code = `{\n  turn: { activePlayers: ActivePlayers.ALL_ONCE },\n}\n`;\n\nconst Description = () => (\n  <div>\n    <pre>{code}</pre>\n  </div>\n);\n\nexport default {\n  description: Description,\n  game: {\n    moves: {\n      move: G => G,\n    },\n\n    turn: { activePlayers: ActivePlayers.ALL_ONCE },\n\n    events: {\n      endPhase: false,\n    },\n  },\n};\n","/*\n * Copyright 2018 The boardgame.io Authors.\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\n\nimport React from 'react';\nimport { ActivePlayers } from 'boardgame.io/core';\n\nconst code = `{\n  turn: { activePlayers: ActivePlayers.OTHERS },\n}\n`;\n\nconst Description = () => (\n  <div>\n    <pre>{code}</pre>\n  </div>\n);\n\nexport default {\n  description: Description,\n  game: {\n    moves: {\n      move: G => G,\n    },\n\n    events: {\n      endPhase: false,\n    },\n\n    turn: { activePlayers: ActivePlayers.OTHERS },\n  },\n};\n","/*\n * Copyright 2018 The boardgame.io Authors.\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\n\nimport React from 'react';\n\nconst code = `{\n  moves: {\n    play: (G, ctx) => {\n      ctx.events.setActivePlayers({\n        others: 'discard',\n        moveLimit: 1\n      });\n      return G;\n    },\n  },\n\n  turn: {\n    stages: {\n      discard: {\n        moves: {\n          discard: G => G,\n        },\n      },\n    },\n  },\n}\n`;\n\nconst Description = () => (\n  <div>\n    <pre>{code}</pre>\n  </div>\n);\n\nexport default {\n  description: Description,\n\n  game: {\n    events: {\n      endPhase: false,\n    },\n\n    moves: {\n      play: (G, ctx) => {\n        ctx.events.setActivePlayers({ others: 'discard', moveLimit: 1 });\n        return G;\n      },\n    },\n\n    turn: {\n      stages: {\n        discard: {\n          moves: {\n            discard: G => G,\n          },\n        },\n      },\n    },\n  },\n};\n","/*\n * Copyright 2018 The boardgame.io Authors.\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\n\nimport React from 'react';\nimport { Client } from 'boardgame.io/react';\nimport All from './example-all';\nimport AllOnce from './example-all-once';\nimport Others from './example-others';\nimport OthersOnce from './example-others-once';\nimport './simulator.css';\n\nfunction Board({ ctx, moves, events, playerID }) {\n  if (playerID === null) {\n    return <div className=\"table-interior\"></div>;\n  }\n\n  let className = 'player';\n  let active = false;\n  let current = false;\n  let stage;\n  let onClick = () => {};\n\n  if (ctx.activePlayers) {\n    if (playerID in ctx.activePlayers) {\n      className += ' active';\n      active = true;\n      stage = ctx.activePlayers[playerID];\n    }\n  } else {\n    if (playerID === ctx.currentPlayer) {\n      className += ' active';\n      active = true;\n    }\n  }\n\n  if (playerID == ctx.currentPlayer) {\n    className += ' current';\n    current = true;\n  }\n\n  moves = Object.entries(moves)\n    .filter(e => !(e[0] === 'play' && stage === 'discard'))\n    .filter(e => !(e[0] === 'discard' && stage !== 'discard'))\n    .map(e => (\n      <button key={e[0]} onClick={() => e[1]()}>\n        {e[0]}\n      </button>\n    ));\n\n  events = Object.entries(events)\n    .filter(() => current && active)\n    .filter(e => e[0] != 'setActivePlayers')\n    .filter(e => e[0] != 'setStage')\n    .filter(e => e[0] != 'endStage')\n    .map(e => (\n      <button key={e[0]} onClick={() => e[1]()}>\n        {e[0]}\n      </button>\n    ));\n\n  return (\n    <div className=\"player-wrap\">\n      <span className={className} onClick={onClick}>\n        {playerID}\n      </span>\n\n      <div className=\"controls\">\n        {active && moves}\n        {events}\n      </div>\n    </div>\n  );\n}\n\nconst examples = {\n  'others-once': OthersOnce,\n  all: All,\n  'all-once': AllOnce,\n  others: Others,\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.init('all');\n  }\n\n  init(type) {\n    let shouldUpdate = false;\n    if (this.client !== undefined) {\n      shouldUpdate = true;\n    }\n\n    this.type = type;\n    this.description = examples[type].description;\n    this.client = Client({\n      game: examples[type].game,\n      numPlayers: 6,\n      debug: false,\n      board: Board,\n      multiplayer: { local: true },\n    });\n\n    if (shouldUpdate) {\n      this.forceUpdate();\n    }\n  }\n\n  render() {\n    const Description = this.description;\n    const App = this.client;\n\n    let players = [];\n    for (let i = 0; i < 6; i++) {\n      players.push(<App key={i} gameID={this.type} playerID={i + ''} />);\n    }\n\n    return (\n      <div id=\"turnorder\">\n        <div className=\"turnorder-options\">\n          <div\n            className={this.type === 'all' ? 'active' : ''}\n            onClick={() => this.init('all')}\n          >\n            ALL\n          </div>\n          <div\n            className={this.type === 'all-once' ? 'active' : ''}\n            onClick={() => this.init('all-once')}\n          >\n            ALL_ONCE\n          </div>\n          <div\n            className={this.type === 'others' ? 'active' : ''}\n            onClick={() => this.init('others')}\n          >\n            OTHERS\n          </div>\n          <div\n            className={this.type === 'others-once' ? 'active' : ''}\n            onClick={() => this.init('others-once')}\n          >\n            OTHERS_ONCE\n          </div>\n        </div>\n\n        <div className=\"turnorder-content\">\n          <div className=\"player-container\">\n            <App gameID={this.type} />\n            <span>{players}</span>\n          </div>\n          <div className=\"description\">\n            <Description />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/*\n * Copyright 2017 The boardgame.io Authors.\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\n\nimport TO from './turnorder/simulator';\n\n// CSS for the sidebar is taken from vue.css\nexport const App = TO;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { App } from './app';\n\nrender(\n  <App />,\n  document.getElementById('test') || document.createElement('div')\n);\n"],"sourceRoot":""}